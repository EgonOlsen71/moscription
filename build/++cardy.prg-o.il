PROGRAMSTART:
JSR START
0:
NOP
10:
NOP
MOVB 53280,#11{INTEGER}
NOP
MOVB 53281,#0{INTEGER}
NOP
MOVB 646,#1{INTEGER}
NOP
MOVB 650,#128{INTEGER}
20:
NOP
MOV Y,#0{INTEGER}
MOV X,LF%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP0
JMP SKIP0
NSKIP0:
NOP
NOP
MOV Y,#1{INTEGER}
MOV LF%{INTEGER},Y
MOV B,#chars{STRING}
NOP
PUSH B
MOV X,#8{INTEGER}
MOV Y,#1{INTEGER}
POP G
JSR LOAD
JMP RESTARTPRG
SKIP0:
25:
NOP
MOV Y,#1{INTEGER}
MOV X,LF%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP1
JMP SKIP1
NSKIP1:
NOP
NOP
MOV Y,#21{INTEGER}
MOV LF%{INTEGER},Y
MOV B,#copy{STRING}
NOP
PUSH B
MOV X,#8{INTEGER}
MOV Y,#1{INTEGER}
POP G
JSR LOAD
JMP RESTARTPRG
SKIP1:
30:
NOP
JSR GOSUB
JSR 19900
NOP
JSR GOSUB
JSR 59000
NOP
JSR GOSUB
JSR 32000
NOP
JSR GOSUB
JSR 33000
40:
NOP
JSR GOSUB
JSR 33500
NOP
JSR GOSUB
JSR 33800
NOP
JSR GOSUB
JSR 33850
NOP
JSR GOSUB
JSR 58500
NOP
JSR GOSUB
JSR 34000
900:
NOP
1000:
NOP
MOV Y,#1{INTEGER}
RND X,Y
MOV A,#2{INTEGER}
SHL X,A
MOV FI%{INTEGER},X
NOP
MOV X,FI%{INTEGER}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP2
JMP SKIP2
NSKIP2:
JMP 1000
NOP
SKIP2:
1010:
NOP
JSR GOSUB
JSR 10000
1040:
NOP
MOV Y,#0{INTEGER}
MOV MD%{INTEGER},Y
NOP
JSR GOSUB
JSR 33300
NOP
JSR GOSUB
JSR 29000
NOP
JSR GOSUB
JSR 47900
1045:
NOP
MOV Y,#9{INTEGER}
PUSH Y
NOP
JSR COMPACTMAX
MOV X,AL%{INTEGER}
JSR FINX
MOV Y,X
CHGCTX #1
JSR STR
MOV B,A
MOV A,#ai level:{STRING}
JSR CONCAT
JSR COPYSTR
POP X
MOV G,MG$[]{STRING}
JSR ARRAYSTORE
NOP
MOV Y,#9{INTEGER}
MOV MG%{INTEGER},Y
NOP
JSR GOSUB
JSR 40000
1050:
NOP
MOV Y,#6{INTEGER}
MOV MG%{INTEGER},Y
NOP
JSR GOSUB
JSR 40000
1060:
NOP
JSR GOSUB
JSR 22000
1070:
NOP
MOV X,MD%{INTEGER}
JSR FINX
INT X,X
ON0SUB0:
CMP X,#1{INTEGER}
JNE ON0SUB1
JSR GOSUB
JSR 44400
JMP GSKIPON0
ON0SUB1:
CMP X,#2{INTEGER}
JNE ON0SUB2
JSR GOSUB
JSR 45500
JMP GSKIPON0
ON0SUB2:
CMP X,#3{INTEGER}
JNE ON0SUB3
JSR GOSUB
JSR 44500
JMP GSKIPON0
ON0SUB3:
CMP X,#4{INTEGER}
JNE ON0SUB4
JSR GOSUB
JSR 47500
JMP GSKIPON0
ON0SUB4:
CMP X,#5{INTEGER}
JNE GSKIPON0
JSR GOSUB
JSR 53000
JMP GSKIPON0
GSKIPON0:
1075:
NOP
MOV Y,#5{INTEGER}
MOV X,MD%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP3
JMP SKIP3
NSKIP3:
JMP 900
NOP
SKIP3:
1080:
NOP
JMP 1060
9999:
NOP
JSR END
RTS
10000:
NOP
10005:
NOP
MOV Y,#1{INTEGER}
MOV AF%{INTEGER},Y
NOP
JSR GOSUB
JSR 51900
10010:
NOP
MOV Y,FI%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,RS%{INTEGER}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,FI%{INTEGER}
PUSH Y
NOP
MOV Y,#44{INTEGER}
PUSH Y
MOV Y,RS%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
10020:
NOP
JMP RETURN
19900:
NOP
19910:
NOP
MOV Y,#0{INTEGER}
MOV VC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV AC%{INTEGER},Y
19920:
NOP
NOP
MOV Y,#54272.0{REAL}
MOV I{REAL},Y
MOV Y,#54296.0{REAL}
PUSH Y
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
MOV X,#0{INTEGER}
JSR FASTFOR
CMP A,#0{INTEGER}
JE ($JUMP)
19930:
NOP
MOVB 54296,#15{INTEGER}
NOP
JMP RETURN
19999:
NOP
20000:
NOP
MOV Y,#0{INTEGER}
MOV IC%{INTEGER},Y
NOP
JSR GOSUB
JSR 22000
20010:
NOP
MOV X,VC%{INTEGER}
MOV G,VW%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#0{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP4
JMP SKIP4
NSKIP4:
JMP 20100
NOP
SKIP4:
20020:
NOP
MOV X,VC%{INTEGER}
JSR FINX
MOV VC%{INTEGER},X
NOP
MOV X,IC%{INTEGER}
JSR FINX
MOV IC%{INTEGER},X
20030:
NOP
MOV Y,#3{INTEGER}
MOV X,VC%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP5
JMP SKIP5
NSKIP5:
NOP
NOP
MOV Y,#0{INTEGER}
MOV VC%{INTEGER},Y
SKIP5:
20040:
NOP
MOV Y,#3{INTEGER}
MOV X,IC%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP6
JMP SKIP6
NSKIP6:
JMP RETURN
NOP
SKIP6:
20050:
NOP
JMP 20010
20100:
NOP
MOV Y,TI{REAL}
MOV TT{REAL},Y
NOP
MOV Y,#7{INTEGER}
MOV X,VC%{INTEGER}
MUL X,Y
MOV Y,#54272.0{REAL}
ADD X,Y
MOV SB{REAL},X
20110:
NOP
MOV Y,#5{INTEGER}
MOV X,SB{REAL}
ADD X,Y
PUSH X
MOV A,#4{INTEGER}
MOV X,AT%{INTEGER}
SHL X,A
MOV Y,DD%{INTEGER}
ADD X,Y
POP Y
MOVB (Y),X
20120:
NOP
MOV Y,#6{INTEGER}
MOV X,SB{REAL}
ADD X,Y
PUSH X
MOV A,#4{INTEGER}
MOV X,EL%{INTEGER}
SHL X,A
MOV Y,RL%{INTEGER}
ADD X,Y
POP Y
MOVB (Y),X
20130:
NOP
MOV Y,SB{REAL}
PUSH Y
MOV X,LQ%{INTEGER}
POP Y
MOVB (Y),X
NOP
MOV Y,#1{INTEGER}
MOV X,SB{REAL}
ADD X,Y
PUSH X
MOV X,HQ%{INTEGER}
POP Y
MOVB (Y),X
20140:
NOP
MOV Y,VC%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,WF%{INTEGER}
MOV G,VW%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,VC%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,TT{REAL}
MOV G,VL[]{REAL}
JSR ARRAYSTORE
NOP
MOVB 54296,#15{INTEGER}
NOP
MOV Y,#4{INTEGER}
MOV X,SB{REAL}
ADD X,Y
PUSH X
MOV X,WF%{INTEGER}
JSR FINX
POP Y
MOVB (Y),X
20150:
NOP
MOV A,#1{INTEGER}
MOV X,PT%{INTEGER}
SHL X,A
MOV PT%{INTEGER},X
NOP
MOV Y,VC%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,PT%{INTEGER}
MOV G,VT%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV X,AC%{INTEGER}
JSR FINX
MOV AC%{INTEGER},X
20160:
NOP
MOV Y,#0{INTEGER}
MOV X,IM%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP7
JMP SKIP7
NSKIP7:
JMP RETURN
NOP
SKIP7:
20170:
NOP
MOV Y,TI{REAL}
MOV TT{REAL},Y
NOP
MOV X,VC%{INTEGER}
MOV G,VL[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
MOV X,TT{REAL}
SUB X,Y
MOV Y,PT%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP8
JMP SKIP8
NSKIP8:
JMP 20170
NOP
SKIP8:
20180:
NOP
MOV Y,#4{INTEGER}
MOV X,SB{REAL}
ADD X,Y
PUSH X
MOV X,WF%{INTEGER}
POP Y
MOVB (Y),X
NOP
MOV Y,VC%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,VW%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV X,AC%{INTEGER}
JSR FDEX
MOV AC%{INTEGER},X
20190:
NOP
MOV X,VC%{INTEGER}
JSR FINX
MOV VC%{INTEGER},X
NOP
MOV Y,#3{INTEGER}
MOV X,VC%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP9
JMP SKIP9
NSKIP9:
NOP
NOP
MOV Y,#0{INTEGER}
MOV VC%{INTEGER},Y
SKIP9:
20200:
NOP
JMP RETURN
21999:
NOP
22000:
NOP
MOV Y,#0{INTEGER}
MOV X,AC%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP10
JMP SKIP10
NSKIP10:
JMP RETURN
NOP
SKIP10:
22005:
NOP
MOV Y,TT{REAL}
MOV TS{REAL},Y
NOP
MOV Y,TI{REAL}
MOV TT{REAL},Y
NOP
MOV Y,TT{REAL}
MOV X,TS{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP11
JMP SKIP11
NSKIP11:
NOP
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,VW%[]{INTEGER}
JSR ARRAYSTORE
NOP
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,VW%[]{INTEGER}
JSR ARRAYSTORE
NOP
NOP
MOV Y,#2{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,VW%[]{INTEGER}
JSR ARRAYSTORE
SKIP11:
22010:
NOP
MOV Y,#0{INTEGER}
MOV HH{REAL},Y
NOP
MOV Y,#2{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(HH{REAL})
JSR INITFOR
NOP
MOV X,HH{REAL}
MOV G,VT%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
PUSH X
MOV X,HH{REAL}
MOV G,VL[]{REAL}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
MOV X,TT{REAL}
SUB X,Y
POP Y
LT X,Y
PUSH X
MOV X,HH{REAL}
MOV G,VW%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#0{INTEGER}
EQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP12
JMP SKIP12
NSKIP12:
JMP 22040
NOP
SKIP12:
22020:
NOP
MOV Y,#7{INTEGER}
MOV X,HH{REAL}
MUL X,Y
MOV Y,#54272.0{REAL}
ADD X,Y
MOV Y,#4{INTEGER}
ADD X,Y
PUSH X
MOV X,HH{REAL}
MOV G,VW%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
NOP
MOV Y,HH{REAL}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,VW%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV X,AC%{INTEGER}
JSR FDEX
MOV AC%{INTEGER},X
22040:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
29000:
NOP
29010:
NOP
JSR GOSUB
JSR 29800
NOP
MOV Y,#0{INTEGER}
MOV XC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV II{REAL},Y
NOP
MOV Y,#11{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(II{REAL})
JSR INITFOR
29020:
NOP
MOV X,II{REAL}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
MOV Y,#-1.0{REAL}
MOV X,CN%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP13
JMP SKIP13
NSKIP13:
JMP 29050
NOP
SKIP13:
29030:
NOP
MOV Y,#0{INTEGER}
MOV X,YC%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP14
JMP SKIP14
NSKIP14:
JSR GOSUB
NOP
JSR 30800
JMP 29050
NOP
SKIP14:
29040:
NOP
MOV X,II{REAL}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV HP%{INTEGER},X
NOP
JSR GOSUB
JSR 30000
29050:
NOP
MOV Y,#7{INTEGER}
MOV X,XC%{INTEGER}
ADD X,Y
MOV XC%{INTEGER},X
NOP
MOV Y,#21{INTEGER}
MOV X,XC%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP15
JMP SKIP15
NSKIP15:
NOP
NOP
MOV Y,#0{INTEGER}
MOV XC%{INTEGER},Y
NOP
NOP
MOV Y,#4{INTEGER}
MOV X,YC%{INTEGER}
EQ X,Y
MOV A,#2{INTEGER}
SHL X,A
PUSH X
MOV Y,#4{INTEGER}
MOV X,YC%{INTEGER}
ADD X,Y
POP Y
SUB X,Y
MOV YC%{INTEGER},X
SKIP15:
29100:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
29800:
NOP
29810:
NOP
JSR COMPACTMAX
MOV Y,#19{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
MOVB 646,#1{INTEGER}
NOP
MOV Y,#0{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV CY%{INTEGER},Y
29820:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#19{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
JSR GOSUB
JSR 34500
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
NOP
MOV A,#{28*space}{STRING}
JSR STROUT
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
29830:
NOP
JMP RETURN
30000:
NOP
30001:
NOP
30005:
NOP
MOV Y,#1{INTEGER}
MOV DC%{INTEGER},Y
30010:
NOP
MOVB X,53266
MOV Y,#100{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP16
JMP SKIP16
NSKIP16:
JMP 30010
NOP
SKIP16:
30020:
NOP
JSR GOSUB
JSR 31600
NOP
MOV Y,#5{INTEGER}
MOV X,YC%{INTEGER}
ADD X,Y
MOV A,#5{INTEGER}
MOV Y,X
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
PUSH X
MOV X,XC%{INTEGER}
JSR FINX
POP Y
ADD X,Y
MOV SS%{INTEGER},X
30150:
NOP
MOV Y,#40{INTEGER}
MOV X,SS%{INTEGER}
ADD X,Y
MOV Y,SA{REAL}
ADD X,Y
MOV PP{REAL},X
NOP
MOV Y,PP{REAL}
PUSH Y
MOV Y,#48{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
ADD X,Y
POP Y
MOVB (Y),X
30160:
NOP
30162:
NOP
JSR GOSUB
JSR 30700
NOP
MOV Y,#-1.0{REAL}
MOV X,HP%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP17
JMP SKIP17
NSKIP17:
NOP
NOP
MOV Y,#44{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV HP%{INTEGER},X
SKIP17:
30170:
NOP
MOV Y,#4{INTEGER}
MOV X,PP{REAL}
ADD X,Y
MOV PP{REAL},X
NOP
MOV Y,PP{REAL}
PUSH Y
MOV Y,#48{INTEGER}
MOV X,HP%{INTEGER}
ADD X,Y
POP Y
MOVB (Y),X
NOP
MOV Y,#-1.0{REAL}
MOV HP%{INTEGER},Y
30180:
NOP
MOV Y,#28{INTEGER}
MOV PV%{INTEGER},Y
NOP
MOV Y,#66{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV PC%{INTEGER},X
30190:
NOP
MOV Y,#88{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#0{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP18
JMP SKIP18
NSKIP18:
NOP
NOP
MOV Y,#37{INTEGER}
MOV PV%{INTEGER},Y
NOP
NOP
MOV Y,#88{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV PC%{INTEGER},X
NOP
NOP
MOV Y,DC%{INTEGER}
MOV C%{INTEGER},Y
SKIP18:
30200:
NOP
MOV Y,#0{INTEGER}
MOV X,PC%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP19
JMP SKIP19
NSKIP19:
NOP
NOP
MOV Y,#1{INTEGER}
MOV PC%{INTEGER},Y
NOP
NOP
MOV Y,#32{INTEGER}
MOV PV%{INTEGER},Y
SKIP19:
30210:
NOP
MOV Y,#200.0{REAL}
MOV X,PP{REAL}
SUB X,Y
MOV Y,#4{INTEGER}
SUB X,Y
MOV PO{REAL},X
NOP
MOV Y,PC%{INTEGER}
MOV X,#5{INTEGER}
SUB X,Y
MOV Y,PO{REAL}
ADD X,Y
MOV PP{REAL},X
30220:
NOP
MOV Y,PP{REAL}
MOV PP{REAL},Y
NOP
MOV Y,PC%{INTEGER}
MOV X,PP{REAL}
ADD X,Y
MOV Y,#1{INTEGER}
SUB X,Y
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(PP{REAL})
JSR INITFOR
30230:
NOP
MOV Y,PP{REAL}
PUSH Y
MOV X,PV%{INTEGER}
POP Y
MOVB (Y),X
NOP
MOV Y,CA{REAL}
MOV X,PP{REAL}
ADD X,Y
PUSH X
MOV X,C%{INTEGER}
POP Y
MOVB (Y),X
30240:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
30250:
NOP
MOV Y,#80{INTEGER}
MOV X,PP{REAL}
ADD X,Y
MOV Y,#3{INTEGER}
SUB X,Y
MOV PP{REAL},X
NOP
MOV Y,#110{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV PV%{INTEGER},X
30260:
NOP
MOV Y,PP{REAL}
PUSH Y
MOV X,PV%{INTEGER}
POP Y
MOVB (Y),X
NOP
MOV Y,#1{INTEGER}
MOV X,PP{REAL}
ADD X,Y
PUSH X
MOV X,PV%{INTEGER}
JSR FINX
POP Y
MOVB (Y),X
30270:
NOP
MOV Y,#40{INTEGER}
MOV X,PP{REAL}
ADD X,Y
PUSH X
MOV Y,#2{INTEGER}
MOV X,PV%{INTEGER}
ADD X,Y
POP Y
MOVB (Y),X
NOP
MOV Y,#41{INTEGER}
MOV X,PP{REAL}
ADD X,Y
PUSH X
MOV Y,#3{INTEGER}
MOV X,PV%{INTEGER}
ADD X,Y
POP Y
MOVB (Y),X
30280:
NOP
MOV Y,#120{INTEGER}
MOV X,PP{REAL}
ADD X,Y
MOV PP{REAL},X
30290:
NOP
MOV Y,#22{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV PV%{INTEGER},X
30295:
NOP
MOV Y,#0{INTEGER}
MOV X,PV%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP20
JMP SKIP20
NSKIP20:
JMP 30360
NOP
SKIP20:
30300:
NOP
MOV Y,PP{REAL}
PUSH Y
MOV Y,#13{INTEGER}
MOV X,PV%{INTEGER}
GT X,Y
PUSH X
MOV Y,#93{INTEGER}
MOV X,PV%{INTEGER}
ADD X,Y
POP Y
SUB X,Y
POP Y
MOVB (Y),X
NOP
MOV Y,DC%{INTEGER}
MOV C%{INTEGER},Y
30310:
NOP
MOV Y,#28{INTEGER}
MOV X,PV%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP21
JMP SKIP21
NSKIP21:
JSR GOSUB
NOP
JSR 30700
SKIP21:
30320:
NOP
MOV Y,CA{REAL}
MOV X,PP{REAL}
ADD X,Y
PUSH X
MOV X,C%{INTEGER}
POP Y
MOVB (Y),X
30360:
NOP
JMP RETURN
30700:
NOP
30710:
NOP
MOV Y,#1{INTEGER}
MOV X,DC%{INTEGER}
NEQ X,Y
MOV Y,#7{INTEGER}
MUL X,Y
MOV Y,X
MOV X,#2{INTEGER}
SUB X,Y
MOV C%{INTEGER},X
NOP
JMP RETURN
30800:
NOP
30801:
NOP
30810:
NOP
JSR GOSUB
JSR 31900
30820:
NOP
MOV X,YC%{INTEGER}
JSR FINX
MOV A,#5{INTEGER}
MOV Y,X
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
PUSH X
MOV X,XC%{INTEGER}
JSR FINX
POP Y
ADD X,Y
MOV SS%{INTEGER},X
30960:
NOP
MOV Y,#1{INTEGER}
MOV DC%{INTEGER},Y
NOP
MOV Y,#-1.0{REAL}
MOV HP%{INTEGER},Y
NOP
JSR GOSUB
JSR 30150
30970:
NOP
JMP RETURN
31000:
NOP
31010:
NOP
MOV Y,SA{REAL}
MOV X,SS%{INTEGER}
ADD X,Y
PUSH X
MOV X,CC%{INTEGER}
POP Y
MOVB (Y),X
31020:
NOP
MOV Y,XD%{INTEGER}
MOV X,SS%{INTEGER}
ADD X,Y
MOV Y,YD%{INTEGER}
ADD X,Y
MOV SS%{INTEGER},X
NOP
MOV Y,SE%{INTEGER}
MOV X,SS%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP22
JMP SKIP22
NSKIP22:
JMP RETURN
NOP
SKIP22:
31030:
NOP
JMP 31010
31600:
NOP
31610:
NOP
MOV Y,XC%{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,YC%{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV X,DC%{INTEGER}
MOVB 646,X
31620:
NOP
MOV A,#{117}{99}{99}{99}{99}{99}{105}{STRING}
JSR STROUT
31630:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#5{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{98}     {98}{STRING}
JSR STROUT
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
31640:
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
NOP
MOV Y,#25{INTEGER}
MOV X,CY%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP23
JMP SKIP23
NSKIP23:
JSR GOSUB
NOP
JSR 34500
NOP
NOP
MOV A,#{106}{99}{99}{99}{99}{99}{107}{STRING}
JSR STROUT
SKIP23:
31650:
NOP
MOV Y,#2{INTEGER}
MOV X,CY%{INTEGER}
SUB X,Y
MOV CY%{INTEGER},X
NOP
JSR GOSUB
JSR 34500
31660:
NOP
MOV A,#{235}{99}{99}{99}{99}{99}{179}{STRING}
JSR STROUT
31670:
NOP
JMP RETURN
31900:
NOP
31910:
NOP
MOV Y,XC%{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,YC%{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOVB 646,#1{INTEGER}
31920:
NOP
MOV A,#{98}     {98}{STRING}
JSR STROUT
31940:
NOP
JSR GOSUB
JSR 31990
NOP
MOV A,#{235}{99}{99}{99}{99}{99}{179}{STRING}
JSR STROUT
31950:
NOP
JSR GOSUB
JSR 31990
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{98}     {98}{STRING}
JSR STROUT
31960:
NOP
JSR GOSUB
JSR 31990
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{106}{99}{99}{99}{99}{99}{107}{STRING}
JSR STROUT
JSR LINEBREAK
31970:
NOP
JMP RETURN
31990:
NOP
31992:
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
NOP
JSR GOSUB
JSR 34500
NOP
JMP RETURN
32000:
NOP
32010:
NOP
MOV Y,#56576{INTEGER}
MOV A,#252{INTEGER}
JSR PEEKBYTEAND
MOVB 56576,X
32020:
NOP
MOVB 53272,#56{INTEGER}
NOP
MOVB 648,#204{INTEGER}
32030:
NOP
MOV Y,#52224{INTEGER}
MOV SA{REAL},Y
NOP
MOV Y,#3072{INTEGER}
MOV CA{REAL},Y
NOP
JSR COMPACTMAX
MOV Y,#147{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
32040:
NOP
JMP RETURN
32100:
NOP
32110:
NOP
MOV Y,XC%{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,YC%{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOVB 646,#1{INTEGER}
NOP
JSR GOSUB
JSR 34500
32120:
NOP
MOV A,#       {STRING}
JSR STROUT
32140:
NOP
JSR GOSUB
JSR 31990
NOP
MOV A,#       {STRING}
JSR STROUT
32150:
NOP
JSR GOSUB
JSR 31990
NOP
MOV A,#       {STRING}
JSR STROUT
32160:
NOP
JSR GOSUB
JSR 31990
NOP
MOV A,#       {STRING}
JSR STROUT
32170:
NOP
JMP RETURN
33000:
NOP
33005:
NOP
MOV Y,#0{INTEGER}
RND X,Y
MOV I{REAL},X
NOP
MOV A,#shuffling...{STRING}
JSR STROUT
33010:
33015:
33020:
NOP
MOV Y,#0{INTEGER}
MOV CM%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV S1%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV S2%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV AL%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV WN%{INTEGER},Y
NOP
MOV Y,#8{INTEGER}
MOV WW%{INTEGER},Y
33030:
NOP
JSR READNUMBER
MOV AV%{INTEGER},Y
JSR READNUMBER
MOV SG%{INTEGER},Y
JSR READNUMBER
MOV HP%{INTEGER},Y
JSR READNUMBER
MOV CH%{INTEGER},Y
JSR READNUMBER
MOV CB%{INTEGER},Y
JSR READNUMBER
MOV IM%{INTEGER},Y
33040:
NOP
MOV Y,#-1.0{REAL}
MOV X,AV%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP24
JMP SKIP24
NSKIP24:
JMP 33100
NOP
SKIP24:
33050:
NOP
MOV Y,CM%{INTEGER}
INT X,Y
NOP
MOV Y,AV%{INTEGER}
MOV G,CV%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#22{INTEGER}
PUSH Y
MOV Y,CM%{INTEGER}
INT X,Y
POP Y
ADD X,Y
NOP
MOV Y,SG%{INTEGER}
MOV G,CV%[]{INTEGER}
JSR ARRAYSTORE
33060:
NOP
MOV Y,#44{INTEGER}
PUSH Y
MOV Y,CM%{INTEGER}
INT X,Y
POP Y
ADD X,Y
NOP
MOV Y,HP%{INTEGER}
MOV G,CV%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#66{INTEGER}
PUSH Y
MOV Y,CM%{INTEGER}
INT X,Y
POP Y
ADD X,Y
NOP
MOV Y,CH%{INTEGER}
MOV G,CV%[]{INTEGER}
JSR ARRAYSTORE
33070:
NOP
MOV Y,#88{INTEGER}
PUSH Y
MOV Y,CM%{INTEGER}
INT X,Y
POP Y
ADD X,Y
NOP
MOV Y,CB%{INTEGER}
MOV G,CV%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#110{INTEGER}
PUSH Y
MOV Y,CM%{INTEGER}
INT X,Y
POP Y
ADD X,Y
NOP
MOV Y,IM%{INTEGER}
MOV G,CV%[]{INTEGER}
JSR ARRAYSTORE
33080:
NOP
MOV X,CM%{INTEGER}
JSR FINX
MOV CM%{INTEGER},X
NOP
JMP 33030
33090:
NOP
33100:
NOP
MOV Y,#0{INTEGER}
MOV HC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV BC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV DS%{INTEGER},Y
33110:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#100{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,CP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
33130:
NOP
33135:
NOP
JSR GOSUB
JSR 33600
33175:
NOP
33180:
NOP
JSR GOSUB
JSR 33250
33200:
NOP
JSR GOSUB
JSR 57000
NOP
JSR GOSUB
JSR 33400
NOP
JMP RETURN
33250:
NOP
33260:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#11{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
33270:
NOP
JMP RETURN
33300:
NOP
33310:
NOP
MOV Y,PN%{INTEGER}
MOV PI%{INTEGER},Y
33320:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV A,#2{INTEGER}
MOV X,PI%{INTEGER}
SHL X,A
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
33330:
NOP
MOV Y,PI%{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV I2%{INTEGER},X
NOP
MOV Y,PI%{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV I3%{INTEGER},X
33340:
NOP
MOV X,I2%{INTEGER}
MOV G,CP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV I4%{INTEGER},X
NOP
MOV Y,I2%{INTEGER}
PUSH Y
NOP
MOV X,I3%{INTEGER}
MOV G,CP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,CP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,I3%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,I4%{INTEGER}
MOV G,CP%[]{INTEGER}
JSR ARRAYSTORE
33350:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
33400:
NOP
33410:
NOP
33420:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#5{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
JSR GOSUB
JSR 57200
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,RS%{INTEGER}
MOV G,CP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
33430:
NOP
MOV Y,I{REAL}
MOV PN%{INTEGER},Y
NOP
MOV Y,PN%{INTEGER}
MOV PI%{INTEGER},Y
NOP
JMP RETURN
33500:
NOP
33510:
NOP
MOV Y,#0{INTEGER}
MOV II%{INTEGER},Y
33520:
NOP
JSR READSTR
MOV A${STRING},A
NOP
MOV B,#/{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP25
JMP SKIP25
NSKIP25:
JMP RETURN
NOP
SKIP25:
33530:
NOP
MOV Y,II%{INTEGER}
PUSH Y
NOP
MOV A,A${STRING}
POP X
MOV G,MG$[]{STRING}
JSR ARRAYSTORE
NOP
MOV X,II%{INTEGER}
JSR FINX
MOV II%{INTEGER},X
NOP
JMP 33520
33600:
NOP
33605:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#9{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,CD%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
33610:
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,CD%[]{INTEGER}
JSR ARRAYSTORE
33620:
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#1{INTEGER}
MOV G,CD%[]{INTEGER}
JSR ARRAYSTORE
NOP
33630:
NOP
JMP RETURN
33800:
NOP
33810:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#5{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
33820:
NOP
JSR READNUMBER
MOV A%{INTEGER},Y
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,A%{INTEGER}
MOV G,FC%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
33830:
NOP
JMP RETURN
33850:
NOP
33860:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#5{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
33870:
NOP
JSR READNUMBER
MOV A%{INTEGER},Y
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,A%{INTEGER}
MOV G,SB%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
33880:
NOP
JMP RETURN
34000:
NOP
34010:
NOP
MOV Y,#0{INTEGER}
MOV YD%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV XD%{INTEGER},Y
NOP
MOV Y,#800.0{REAL}
MOV SS%{INTEGER},Y
NOP
MOV Y,#28{INTEGER}
MOV X,SS%{INTEGER}
ADD X,Y
MOV SE%{INTEGER},X
NOP
MOV Y,#67{INTEGER}
MOV CC%{INTEGER},Y
34020:
NOP
JSR GOSUB
JSR 31000
NOP
MOV Y,SA{REAL}
MOV X,SS%{INTEGER}
ADD X,Y
MOV Y,X
MOVB (Y),#75{INTEGER}
NOP
MOV Y,#40{INTEGER}
MOV X,SS%{INTEGER}
SUB X,Y
MOV SS%{INTEGER},X
34030:
NOP
MOV Y,#-40.0{REAL}
MOV YD%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV XD%{INTEGER},Y
NOP
MOV Y,#-12.0{REAL}
MOV SE%{INTEGER},Y
NOP
MOV Y,#93{INTEGER}
MOV CC%{INTEGER},Y
NOP
JSR GOSUB
JSR 31000
34040:
NOP
MOV Y,#40{INTEGER}
MOV YD%{INTEGER},Y
NOP
MOV Y,#867{INTEGER}
MOV SS%{INTEGER},Y
NOP
MOV Y,#160.0{REAL}
MOV X,SS%{INTEGER}
ADD X,Y
MOV SE%{INTEGER},X
NOP
JSR GOSUB
JSR 31000
34050:
NOP
MOV Y,SA{REAL}
MOV X,#827.0{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#114{INTEGER}
34070:
NOP
MOV Y,#0{INTEGER}
MOV YD%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV XD%{INTEGER},Y
NOP
MOV Y,#709{INTEGER}
MOV SS%{INTEGER},Y
NOP
MOV Y,#11{INTEGER}
MOV X,SS%{INTEGER}
ADD X,Y
MOV SE%{INTEGER},X
NOP
MOV Y,#67{INTEGER}
MOV CC%{INTEGER},Y
34080:
NOP
JSR GOSUB
JSR 31000
NOP
MOV Y,SA{REAL}
MOV X,#708.0{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#107{INTEGER}
34090:
NOP
JSR GOSUB
JSR 46500
NOP
JSR GOSUB
JSR 47600
NOP
JMP RETURN
34500:
NOP
34510:
NOP
MOV X,CY%{INTEGER}
MOVB 781,X
NOP
MOV X,CX%{INTEGER}
MOVB 782,X
NOP
MOVB 783,#0{INTEGER}
NOP
JSR $fff0
34520:
NOP
JMP RETURN
34600:
NOP
34610:
NOP
MOV Y,#29{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOVB 646,#1{INTEGER}
34620:
NOP
MOV Y,SS%{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
34630:
NOP
MOV A,#           {STRING}
JSR STROUT
NOP
MOV X,SS%{INTEGER}
JSR FINX
MOV SS%{INTEGER},X
34640:
NOP
MOV Y,SE%{INTEGER}
MOV X,SS%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP26
JMP SKIP26
NSKIP26:
JMP RETURN
NOP
SKIP26:
34650:
NOP
JMP 34620
34700:
NOP
34710:
NOP
MOV Y,#0{INTEGER}
MOV SS%{INTEGER},Y
NOP
MOV Y,#16{INTEGER}
MOV SE%{INTEGER},Y
NOP
JSR GOSUB
JSR 34600
NOP
JMP RETURN
34750:
NOP
34760:
NOP
MOV Y,#18{INTEGER}
MOV SS%{INTEGER},Y
NOP
MOV Y,#23{INTEGER}
MOV SE%{INTEGER},Y
NOP
JSR GOSUB
JSR 34600
34770:
NOP
MOV Y,#999{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#32{INTEGER}
NOP
MOV Y,#29{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#24{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#          {STRING}
JSR STROUT
34780:
NOP
JMP RETURN
35000:
NOP
35005:
NOP
MOV Y,CI%{INTEGER}
MOV II%{INTEGER},Y
35010:
NOP
MOV Y,DS%{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV Y,#33{INTEGER}
MOV XC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV C%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV XD%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV YD%{INTEGER},Y
35015:
NOP
MOV Y,#2{INTEGER}
MOV X,II%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP27
JMP SKIP27
NSKIP27:
JMP RETURN
NOP
SKIP27:
35016:
NOP
MOV Y,#0{INTEGER}
MOV SF%{INTEGER},Y
NOP
MOV X,II%{INTEGER}
JSR FDEX
MOV Y,X
MOV X,CS%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP28
JMP SKIP28
NSKIP28:
NOP
NOP
MOV X,II%{INTEGER}
JSR FDEX
MOV II%{INTEGER},X
NOP
NOP
MOV Y,#1{INTEGER}
MOV SF%{INTEGER},Y
SKIP28:
35020:
NOP
MOV Y,XC%{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,YC%{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV X,II%{INTEGER}
JSR FDEX
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
35030:
NOP
JSR GOSUB
JSR 34500
NOP
MOVB 646,#15{INTEGER}
35040:
NOP
MOV A,#{117}{99}{99}{99}{99}{99}{105}{STRING}
JSR STROUT
35050:
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
35060:
NOP
MOV Y,#9{INTEGER}
MOV X,II%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP29
JMP SKIP29
NSKIP29:
JMP 35110
NOP
SKIP29:
35070:
NOP
MOV Y,II%{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#9{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
JSR GOSUB
JSR 34500
35080:
NOP
MOV A,#       {STRING}
JSR STROUT
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
35090:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
35110:
NOP
MOV Y,II%{INTEGER}
MOV X,DS%{INTEGER}
ADD X,Y
MOV Y,#1{INTEGER}
SUB X,Y
MOV YC%{INTEGER},X
NOP
MOV X,II%{INTEGER}
JSR FDEX
MOV G,CD%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
MOV Y,#15{INTEGER}
MOV DC%{INTEGER},Y
NOP
JSR GOSUB
JSR 30010
35120:
NOP
MOV Y,#1{INTEGER}
MOV X,SF%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP30
JMP SKIP30
NSKIP30:
NOP
NOP
MOV Y,#36{INTEGER}
MOV CX%{INTEGER},Y
NOP
NOP
MOV Y,CS%{INTEGER}
MOV X,DS%{INTEGER}
ADD X,Y
MOV Y,#7{INTEGER}
ADD X,Y
MOV CY%{INTEGER},X
JSR GOSUB
NOP
JSR 34500
NOP
NOP
MOV A,#    {STRING}
JSR STROUT
SKIP30:
35130:
NOP
JMP RETURN
35500:
NOP
35510:
NOP
JSR GOSUB
JSR 34750
NOP
MOV Y,#10{INTEGER}
MOV X,CI%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP31
JMP SKIP31
NSKIP31:
NOP
NOP
MOV Y,#1{INTEGER}
MOV MD%{INTEGER},Y
SKIP31:
35515:
NOP
MOV Y,#0{INTEGER}
MOV X,MD%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP32
JMP SKIP32
NSKIP32:
JMP RETURN
NOP
SKIP32:
35520:
NOP
MOV Y,#0{INTEGER}
MOV CN%{INTEGER},Y
NOP
MOV Y,#29{INTEGER}
MOV XC%{INTEGER},Y
NOP
MOV Y,#18{INTEGER}
MOV YC%{INTEGER},Y
NOP
JSR GOSUB
JSR 30000
35530:
NOP
JSR GOSUB
JSR 35900
35540:
NOP
JSR GOSUB
JSR 35800
NOP
JSR GOSUB
JSR 35700
35570:
NOP
JMP RETURN
35600:
NOP
35610:
NOP
MOV Y,#2{INTEGER}
MOV X,MD%{INTEGER}
GT X,Y
PUSH X
MOV Y,#1{INTEGER}
MOV X,MD%{INTEGER}
LT X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP33
JMP SKIP33
NSKIP33:
JMP RETURN
NOP
SKIP33:
35620:
NOP
JSR GOSUB
JSR 35850
NOP
MOV Y,#12{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV I2%{INTEGER},Y
35630:
NOP
MOV Y,I2%{INTEGER}
MOV X,#8{INTEGER}
ADD X,Y
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV II%{INTEGER},X
NOP
MOV Y,#-1.0{REAL}
MOV X,II%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP34
JMP SKIP34
NSKIP34:
JMP 35650
NOP
SKIP34:
35640:
NOP
MOV Y,I2%{INTEGER}
MOV X,#7{INTEGER}
MUL X,Y
MOV Y,#1{INTEGER}
ADD X,Y
MOV CX%{INTEGER},X
NOP
JSR GOSUB
JSR 34500
NOP
JSR COMPACTMAX
MOV C,#1{INTEGER}
PUSH C
MOV X,I2%{INTEGER}
JSR FINX
MOV Y,X
CHGCTX #1
JSR STR
MOV B,A
POP C
JSR RIGHT
JSR STROUT
JSR LINEBREAK
35650:
NOP
MOV X,I2%{INTEGER}
JSR FINX
MOV I2%{INTEGER},X
NOP
MOV Y,#4{INTEGER}
MOV X,I2%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP35
JMP SKIP35
NSKIP35:
JMP RETURN
NOP
SKIP35:
35660:
NOP
JMP 35630
35670:
NOP
35675:
NOP
MOVB 646,#1{INTEGER}
35680:
NOP
MOV Y,#12{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,I{REAL}
MOV X,#8{INTEGER}
ADD X,Y
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP36
JMP SKIP36
NSKIP36:
NOP
NOP
MOV Y,I{REAL}
MOV X,#7{INTEGER}
MUL X,Y
MOV Y,#1{INTEGER}
ADD X,Y
MOV CX%{INTEGER},X
JSR GOSUB
NOP
JSR 34500
NOP
NOP
MOV A,#{99}{STRING}
JSR STROUT
JSR LINEBREAK
SKIP36:
35685:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
35700:
NOP
35702:
NOP
MOV Y,#0{INTEGER}
MOV X,MD%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP37
JMP SKIP37
NSKIP37:
JMP RETURN
NOP
SKIP37:
35705:
NOP
JSR GOSUB
JSR 35850
35710:
NOP
MOV Y,#30{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#18{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
JSR COMPACTMAX
MOV Y,#49{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
JSR LINEBREAK
35720:
NOP
MOV Y,#0{INTEGER}
MOV X,PI%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP38
JMP SKIP38
NSKIP38:
JMP 35740
NOP
SKIP38:
35730:
NOP
MOV Y,#37{INTEGER}
MOV CX%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
JSR COMPACTMAX
MOV Y,#50{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
JSR LINEBREAK
35740:
NOP
JMP RETURN
35800:
NOP
35810:
NOP
MOV Y,#0{INTEGER}
MOV LT%{INTEGER},Y
NOP
MOV Y,TI{REAL}
MOV LT{REAL},Y
NOP
JMP RETURN
35850:
NOP
35860:
NOP
MOV X,LT%{INTEGER}
MOV G,FC%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOVB 646,X
NOP
MOV Y,LT{REAL}
MOV X,TI{REAL}
SUB X,Y
MOV Y,#20{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP39
JMP SKIP39
NSKIP39:
NOP
NOP
MOV X,LT%{INTEGER}
JSR FINX
MOV LT%{INTEGER},X
NOP
NOP
MOV Y,TI{REAL}
MOV LT{REAL},Y
NOP
NOP
MOV Y,#5{INTEGER}
MOV X,LT%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP40
JMP SKIP40
NSKIP40:
NOP
MOV Y,#0{INTEGER}
NOP
MOV LT%{INTEGER},Y
SKIP40:
SKIP39:
35870:
NOP
JMP RETURN
35900:
NOP
35905:
NOP
MOV Y,#0{INTEGER}
MOV X,PI%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP41
JMP SKIP41
NSKIP41:
JMP RETURN
NOP
SKIP41:
35910:
NOP
MOV Y,#36{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#18{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
35920:
NOP
MOV A,#{117}{99}{99}{99}{STRING}
JSR STROUT
35930:
NOP
MOV Y,#19{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#23{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,I{REAL}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{98}{rvson}{230}{230}{230}{rvsoff}{STRING}
JSR STROUT
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
35940:
NOP
MOV Y,#24{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{98}{rvson}{230}{230}{rvsoff}{STRING}
JSR STROUT
NOP
MOV Y,#999{INTEGER}
MOV X,SA{REAL}
ADD X,Y
PUSH X
MOV Y,#998{INTEGER}
MOV X,SA{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
POP Y
MOVB (Y),X
35950:
NOP
MOV Y,PI%{INTEGER}
MOV II%{INTEGER},Y
NOP
MOV Y,#99{INTEGER}
MOV X,II%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP42
JMP SKIP42
NSKIP42:
NOP
NOP
MOV Y,#99{INTEGER}
MOV II%{INTEGER},Y
SKIP42:
35960:
NOP
MOV Y,#37{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#24{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOVB 646,#3{INTEGER}
NOP
JSR COMPACTMAX
MOV C,#2{INTEGER}
PUSH C
MOV C,#-1{INTEGER}
PUSH C
MOV Y,II%{INTEGER}
CHGCTX #1
JSR STR
MOV B,A
POP D
POP C
JSR MID
JSR STROUT
NOP
MOVB 646,#1{INTEGER}
35970:
NOP
JMP RETURN
36000:
NOP
36020:
NOP
JSR GETSTR
MOV A${STRING},A
NOP
JSR GOSUB
JSR 22000
NOP
MOV B,#{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP43
JMP SKIP43
NSKIP43:
JMP 36040
NOP
SKIP43:
36022:
NOP
MOV B,#h{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP44
JMP SKIP44
NSKIP44:
JSR GOSUB
NOP
JSR 54000
JMP RETURN
NOP
SKIP44:
36025:
NOP
MOV B,A${STRING}
CHGCTX #0
JSR ASC
MOV KY%{INTEGER},X
36030:
NOP
MOV Y,#13{INTEGER}
MOV X,KY%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP45
JMP SKIP45
NSKIP45:
NOP
NOP
MOV B,# {STRING}
MOV A${STRING},B
SKIP45:
36031:
NOP
MOV Y,#157{INTEGER}
MOV X,KY%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP46
JMP SKIP46
NSKIP46:
NOP
NOP
MOV B,#a{STRING}
MOV A${STRING},B
SKIP46:
36032:
NOP
MOV Y,#29{INTEGER}
MOV X,KY%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP47
JMP SKIP47
NSKIP47:
NOP
NOP
MOV B,#d{STRING}
MOV A${STRING},B
SKIP47:
36033:
NOP
MOV Y,#145{INTEGER}
MOV X,KY%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP48
JMP SKIP48
NSKIP48:
NOP
NOP
MOV B,#w{STRING}
MOV A${STRING},B
SKIP48:
36034:
NOP
MOV Y,#17{INTEGER}
MOV X,KY%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP49
JMP SKIP49
NSKIP49:
NOP
NOP
MOV B,#s{STRING}
MOV A${STRING},B
SKIP49:
36040:
NOP
JMP RETURN
36080:
NOP
36090:
NOP
MOVB 198,#0{INTEGER}
NOP
JMP RETURN
36100:
NOP
36110:
NOP
JSR GOSUB
JSR 38000
NOP
MOV Y,#-1.0{REAL}
MOV CS%{INTEGER},Y
36130:
NOP
MOV Y,#0{INTEGER}
MOV CS%{INTEGER},Y
NOP
JMP 36200
36140:
NOP
JSR GOSUB
JSR 36080
NOP
MOV Y,CS%{INTEGER}
MOV SO%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV X,MD%{INTEGER}
GTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP50
JMP SKIP50
NSKIP50:
JMP RETURN
NOP
SKIP50:
36145:
NOP
JSR GOSUB
JSR 36000
NOP
JSR GOSUB
JSR 35600
NOP
JSR GOSUB
JSR 35700
NOP
MOV B,#{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP51
JMP SKIP51
NSKIP51:
JMP 36145
NOP
SKIP51:
36150:
NOP
JSR GOSUB
JSR 45000
NOP
JSR GOSUB
JSR 38500
36170:
NOP
MOV Y,CI%{INTEGER}
MOV X,CS%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP52
JMP SKIP52
NSKIP52:
NOP
NOP
MOV Y,#0{INTEGER}
MOV CS%{INTEGER},Y
SKIP52:
36180:
NOP
MOV Y,#-1.0{REAL}
MOV X,CS%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP53
JMP SKIP53
NSKIP53:
NOP
NOP
MOV X,CI%{INTEGER}
JSR FDEX
MOV CS%{INTEGER},X
SKIP53:
36185:
NOP
MOV Y,#0{INTEGER}
MOV X,CI%{INTEGER}
GT X,Y
PUSH X
MOV Y,CS%{INTEGER}
MOV X,SO%{INTEGER}
EQ X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP54
JMP SKIP54
NSKIP54:
JMP 36230
NOP
SKIP54:
36190:
NOP
MOV Y,SO%{INTEGER}
MOV TC%{INTEGER},Y
NOP
JSR GOSUB
JSR 37000
36200:
NOP
MOV Y,#0{INTEGER}
MOV X,CI%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP55
JMP SKIP55
NSKIP55:
JMP 36230
NOP
SKIP55:
36210:
NOP
MOV Y,#29{INTEGER}
MOV XC%{INTEGER},Y
NOP
MOV Y,CS%{INTEGER}
MOV X,DS%{INTEGER}
ADD X,Y
MOV YC%{INTEGER},X
NOP
MOV X,CS%{INTEGER}
MOV G,CD%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
JSR GOSUB
JSR 30000
36215:
NOP
MOV X,CI%{INTEGER}
JSR FDEX
MOV Y,X
MOV X,CS%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP56
JMP SKIP56
NSKIP56:
JMP 36230
NOP
SKIP56:
36220:
NOP
JSR GOSUB
JSR 36500
36230:
NOP
JMP 36140
36500:
NOP
36520:
NOP
MOV Y,#36{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,CS%{INTEGER}
MOV X,DS%{INTEGER}
ADD X,Y
MOV CY%{INTEGER},X
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#   {STRING}
JSR STROUT
NOP
MOV Y,#32{INTEGER}
MOV CC%{INTEGER},Y
36525:
NOP
MOV Y,#0{INTEGER}
MOV X,CS%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP57
JMP SKIP57
NSKIP57:
NOP
NOP
MOV Y,#93{INTEGER}
MOV CC%{INTEGER},Y
SKIP57:
36526:
NOP
MOV Y,CY%{INTEGER}
MOV A,#5{INTEGER}
MOV X,Y
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
MOV CY%{INTEGER},X
NOP
MOV Y,CY%{INTEGER}
MOV X,#39{INTEGER}
ADD X,Y
MOV Y,SA{REAL}
ADD X,Y
PUSH X
MOV X,CC%{INTEGER}
POP Y
MOVB (Y),X
NOP
JMP RETURN
37000:
NOP
37005:
NOP
MOV Y,#29{INTEGER}
MOV CX%{INTEGER},Y
37010:
NOP
MOV Y,TC%{INTEGER}
MOV X,DS%{INTEGER}
ADD X,Y
MOV CY%{INTEGER},X
NOP
MOVB 646,#1{INTEGER}
NOP
MOV Y,#0{INTEGER}
MOV II%{INTEGER},Y
37020:
NOP
JSR GOSUB
JSR 34500
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
37030:
NOP
MOV A,#       {STRING}
JSR STROUT
37040:
NOP
MOV X,II%{INTEGER}
JSR FINX
MOV II%{INTEGER},X
NOP
JSR GOSUB
JSR 22000
NOP
MOV Y,#8{INTEGER}
MOV X,II%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP58
JMP SKIP58
NSKIP58:
JMP 37020
NOP
SKIP58:
37050:
NOP
JSR GOSUB
JSR 35000
NOP
JMP RETURN
38000:
NOP
38010:
NOP
MOV Y,#0{INTEGER}
MOV CI%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#9{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,I{REAL}
MOV II%{INTEGER},Y
38020:
NOP
MOV X,II%{INTEGER}
MOV G,CD%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP59
JMP SKIP59
NSKIP59:
JMP 38040
NOP
SKIP59:
38025:
NOP
MOV Y,CI%{INTEGER}
PUSH Y
NOP
MOV X,II%{INTEGER}
MOV G,CD%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,CT%[]{INTEGER}
JSR ARRAYSTORE
38030:
NOP
MOV Y,II%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,CD%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV X,CI%{INTEGER}
JSR FINX
MOV CI%{INTEGER},X
38040:
NOP
JSR GOSUB
JSR 22000
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
38050:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#9{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,I{REAL}
MOV II%{INTEGER},Y
38060:
NOP
MOV Y,CI%{INTEGER}
MOV X,I{REAL}
GTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP60
JMP SKIP60
NSKIP60:
NOP
NOP
MOV Y,II%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,CD%[]{INTEGER}
JSR ARRAYSTORE
JMP 38080
NOP
SKIP60:
38070:
NOP
MOV Y,II%{INTEGER}
PUSH Y
NOP
MOV X,II%{INTEGER}
MOV G,CT%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,CD%[]{INTEGER}
JSR ARRAYSTORE
38080:
NOP
JSR GOSUB
JSR 22000
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
38500:
NOP
38510:
NOP
MOV Y,#0{INTEGER}
MOV X,CI%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP61
JMP SKIP61
NSKIP61:
JMP 38535
NOP
SKIP61:
38520:
NOP
MOV B,#s{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP62
JMP SKIP62
NSKIP62:
JSR GOSUB
NOP
JSR 50900
NOP
NOP
MOV X,CS%{INTEGER}
JSR FINX
MOV CS%{INTEGER},X
SKIP62:
38530:
NOP
MOV B,#w{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP63
JMP SKIP63
NSKIP63:
JSR GOSUB
NOP
JSR 50900
NOP
NOP
MOV X,CS%{INTEGER}
JSR FDEX
MOV CS%{INTEGER},X
SKIP63:
38535:
NOP
MOV Y,#1{INTEGER}
MOV X,MD%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP64
JMP SKIP64
NSKIP64:
NOP
NOP
MOV B,#q{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
PUSH X
CHGCTX #1
MOV B,#x{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP65
JMP SKIP65
NSKIP65:
JSR GOSUB
JSR 35670
JSR GOSUB
JSR 47010
NOP
MOV Y,#3{INTEGER}
MOV MD%{INTEGER},Y
JMP RETURN
NOP
NOP
SKIP65:
NOP
SKIP64:
38540:
NOP
MOV Y,#0{INTEGER}
MOV X,MD%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP66
JMP SKIP66
NSKIP66:
JSR GOSUB
NOP
JSR 39000
JMP RETURN
NOP
SKIP66:
38550:
NOP
MOV Y,#1{INTEGER}
MOV X,MD%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP67
JMP SKIP67
NSKIP67:
JSR GOSUB
NOP
JSR 39500
JMP RETURN
NOP
SKIP67:
38560:
NOP
JMP RETURN
39000:
NOP
39010:
NOP
MOV B,#q{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
PUSH X
CHGCTX #1
MOV B,#x{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
PUSH X
CHGCTX #1
MOV B,#a{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
PUSH X
CHGCTX #1
MOV B,# {STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
POP Y
OR X,Y
POP Y
OR X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP68
JMP SKIP68
NSKIP68:
NOP
NOP
MOV Y,#0{INTEGER}
MOV MG%{INTEGER},Y
JSR GOSUB
NOP
JSR 40000
SKIP68:
39020:
NOP
MOV B,#2{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP69
JMP SKIP69
NSKIP69:
JSR GOSUB
NOP
JSR 40500
JSR GOSUB
NOP
JSR 39100
SKIP69:
39030:
NOP
MOV B,#1{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP70
JMP SKIP70
NSKIP70:
JSR GOSUB
NOP
JSR 41000
JSR GOSUB
NOP
JSR 39100
SKIP70:
39035:
NOP
39040:
NOP
JMP RETURN
39100:
NOP
39110:
NOP
JSR GOSUB
JSR 40700
NOP
JSR GOSUB
JSR 50900
NOP
JSR GOSUB
JSR 57280
NOP
MOV Y,#1{INTEGER}
MOV MD%{INTEGER},Y
NOP
JMP RETURN
39500:
NOP
39510:
NOP
MOV B,#a{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
PUSH X
CHGCTX #1
MOV B,# {STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP71
JMP SKIP71
NSKIP71:
JSR GOSUB
NOP
JSR 44000
SKIP71:
39520:
NOP
JMP RETURN
40000:
NOP
40010:
NOP
MOV Y,#1{INTEGER}
MOV WT%{INTEGER},Y
NOP
JSR GOSUB
JSR 40100
NOP
JMP RETURN
40100:
NOP
40110:
NOP
JSR $400
40120:
NOP
MOVB 646,#10{INTEGER}
NOP
MOV X,MG%{INTEGER}
CHGCTX #1
MOV G,MG$[]{STRING}
JSR ARRAYACCESS
JSR COPYSTR
MOV A${STRING},A
40130:
NOP
MOV Y,#0{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV CX%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{80*space}{STRING}
JSR STROUT
40160:
NOP
MOV B,A${STRING}
JSR LEN
MOV A,#1{INTEGER}
SHR X,A
MOV Y,X
MOV X,#20{INTEGER}
SUB X,Y
MOV CX%{INTEGER},X
NOP
JSR GOSUB
JSR 34500
40170:
NOP
MOV A,A${STRING}
JSR STROUT
JSR LINEBREAK
NOP
JSR GOSUB
JSR 40300
40180:
NOP
JSR $403
40190:
NOP
JMP RETURN
40300:
NOP
40310:
NOP
JSR GOSUB
JSR 36080
NOP
MOV Y,TI{REAL}
MOV TS{REAL},Y
NOP
JSR GOSUB
JSR 50000
40315:
NOP
MOV Y,WT%{INTEGER}
MOV A,#6{INTEGER}
MOV X,Y
SHL X,A
MOV A,#2{INTEGER}
SHL Y,A
SUB X,Y
MOV WT%{INTEGER},X
40320:
NOP
MOV Y,TS{REAL}
MOV X,TI{REAL}
SUB X,Y
MOV Y,WT%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP72
JMP SKIP72
NSKIP72:
JMP RETURN
NOP
SKIP72:
40330:
NOP
JSR GETSTR
MOV A${STRING},A
NOP
MOV B,#{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SNEQ
CMP X,#0{REAL}
JNE NSKIP73
JMP SKIP73
NSKIP73:
JMP RETURN
NOP
SKIP73:
40340:
NOP
JSR GOSUB
JSR 22000
NOP
JMP 40320
40500:
NOP
40510:
NOP
MOV Y,#0{INTEGER}
MOV X,PI%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP74
JMP SKIP74
NSKIP74:
JMP RETURN
NOP
SKIP74:
40520:
NOP
MOV X,PI%{INTEGER}
JSR FDEX
MOV G,CP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
MOV X,PI%{INTEGER}
JSR FDEX
MOV PI%{INTEGER},X
40530:
NOP
JSR GOSUB
JSR 34750
40540:
NOP
JSR GOSUB
JSR 40800
40550:
NOP
MOV Y,CI%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,CN%{INTEGER}
MOV G,CD%[]{INTEGER}
JSR ARRAYSTORE
40560:
NOP
MOV Y,CI%{INTEGER}
MOV CS%{INTEGER},Y
NOP
JSR GOSUB
JSR 38000
NOP
JMP RETURN
40700:
NOP
40710:
NOP
MOV Y,#1{INTEGER}
MOV X,CI%{INTEGER}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP75
JMP SKIP75
NSKIP75:
JMP RETURN
NOP
SKIP75:
40720:
NOP
MOV Y,#29{INTEGER}
MOV XC%{INTEGER},Y
NOP
MOV Y,DS%{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV X,#0{INTEGER}
MOV G,CD%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
JSR GOSUB
JSR 30000
40730:
NOP
JMP RETURN
40800:
NOP
40810:
NOP
MOV Y,#9{INTEGER}
MOV X,CI%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP76
JMP SKIP76
NSKIP76:
JMP 57300
NOP
SKIP76:
40820:
NOP
JMP RETURN
41000:
NOP
41010:
NOP
JSR GOSUB
JSR 34750
NOP
JSR GOSUB
JSR 40800
NOP
MOV Y,CI%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#0{INTEGER}
MOV G,CD%[]{INTEGER}
JSR ARRAYSTORE
41020:
NOP
MOV Y,CI%{INTEGER}
MOV CS%{INTEGER},Y
NOP
JSR GOSUB
JSR 38000
NOP
JMP RETURN
44000:
NOP
44010:
NOP
JSR GOSUB
JSR 50900
NOP
MOV Y,#2{INTEGER}
MOV MD%{INTEGER},Y
NOP
MOV Y,#5{INTEGER}
MOV DC%{INTEGER},Y
NOP
JSR GOSUB
JSR 30010
44020:
NOP
MOV Y,#0{INTEGER}
MOV SL%{INTEGER},Y
NOP
MOVB 53249,#203{INTEGER}
NOP
JSR GOSUB
JSR 44200
44030:
NOP
MOVB 53269,#1{INTEGER}
NOP
JMP RETURN
44200:
NOP
44210:
NOP
MOV Y,SL%{INTEGER}
MOV A,#6{INTEGER}
MOV X,Y
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
SUB X,Y
MOV Y,#41{INTEGER}
ADD X,Y
MOVB 53248,X
NOP
JMP RETURN
44400:
NOP
44405:
NOP
MOV Y,#0{INTEGER}
MOV HC%{INTEGER},Y
NOP
JSR GOSUB
JSR 46500
NOP
JSR GOSUB
JSR 38000
NOP
JSR GOSUB
JSR 34700
44410:
NOP
JSR GOSUB
JSR 35000
NOP
JSR GOSUB
JSR 35500
44420:
NOP
JSR GOSUB
JSR 36100
NOP
JMP RETURN
44500:
NOP
44505:
NOP
JSR GOSUB
JSR 57350
NOP
JSR GOSUB
JSR 36080
44510:
NOP
JSR GOSUB
JSR 36000
NOP
JSR GOSUB
JSR 35600
44515:
NOP
JSR GOSUB
JSR 45000
44520:
NOP
MOV B,#a{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP77
JMP SKIP77
NSKIP77:
JSR GOSUB
NOP
JSR 50700
NOP
NOP
MOV X,SL%{INTEGER}
JSR FDEX
MOV SL%{INTEGER},X
SKIP77:
44530:
NOP
MOV B,#d{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP78
JMP SKIP78
NSKIP78:
JSR GOSUB
NOP
JSR 50700
NOP
NOP
MOV X,SL%{INTEGER}
JSR FINX
MOV SL%{INTEGER},X
SKIP78:
44540:
NOP
MOV Y,#0{INTEGER}
MOV X,SL%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP79
JMP SKIP79
NSKIP79:
NOP
NOP
MOV Y,#3{INTEGER}
MOV SL%{INTEGER},Y
SKIP79:
44550:
NOP
MOV Y,#3{INTEGER}
MOV X,SL%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP80
JMP SKIP80
NSKIP80:
NOP
NOP
MOV Y,#0{INTEGER}
MOV SL%{INTEGER},Y
SKIP80:
44560:
NOP
JSR GOSUB
JSR 44200
44570:
NOP
MOV B,#s{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP81
JMP SKIP81
NSKIP81:
JSR GOSUB
NOP
JSR 50900
NOP
NOP
MOV Y,#1{INTEGER}
MOV MD%{INTEGER},Y
SKIP81:
44580:
NOP
MOV B,#w{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
PUSH X
CHGCTX #1
MOV B,# {STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP82
JMP SKIP82
NSKIP82:
JSR GOSUB
NOP
JSR 50700
JSR GOSUB
NOP
JSR 45600
SKIP82:
44590:
NOP
MOV Y,#2{INTEGER}
MOV X,MD%{INTEGER}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP83
JMP SKIP83
NSKIP83:
MOV Y,#0{INTEGER}
NOP
MOV X,Y
MOVB 53269,X
JSR GOSUB
NOP
JSR 57280
JMP RETURN
NOP
SKIP83:
44600:
NOP
JMP 44510
45000:
NOP
45005:
NOP
MOV Y,#0{INTEGER}
MOV X,MD%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP84
JMP SKIP84
NSKIP84:
JMP RETURN
NOP
SKIP84:
45010:
NOP
MOV B,#0{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SGT
CMP X,#0{REAL}
JNE NSKIP85
JMP SKIP85
NSKIP85:
NOP
NOP
MOV B,#5{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SLT
CMP X,#0{REAL}
JNE NSKIP86
JMP SKIP86
NSKIP86:
NOP
MOV B,A${STRING}
NOP
CHGCTX #0
JSR VAL
MOV FS%{INTEGER},X
JSR GOSUB
JSR 46000
NOP
SKIP86:
SKIP85:
45020:
NOP
JMP RETURN
45500:
NOP
45510:
NOP
MOV Y,#29{INTEGER}
MOV XC%{INTEGER},Y
NOP
MOV Y,CS%{INTEGER}
MOV X,DS%{INTEGER}
ADD X,Y
MOV YC%{INTEGER},X
NOP
JSR GOSUB
JSR 30000
45520:
NOP
JSR GOSUB
JSR 36140
NOP
JMP RETURN
45600:
NOP
45610:
NOP
MOV Y,#8{INTEGER}
MOV X,SL%{INTEGER}
ADD X,Y
MOV SD%{INTEGER},X
NOP
MOV X,SD%{INTEGER}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP87
JMP SKIP87
NSKIP87:
JSR GOSUB
NOP
JSR 50000
JMP RETURN
NOP
SKIP87:
45615:
NOP
JSR GOSUB
JSR 46800
NOP
MOV Y,#1{INTEGER}
MOV X,II%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP88
JMP SKIP88
NSKIP88:
JMP RETURN
NOP
SKIP88:
45620:
NOP
MOV X,CS%{INTEGER}
MOV G,CD%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
MOV Y,CS%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,CD%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
MOV MD%{INTEGER},Y
NOP
JSR GOSUB
JSR 38000
45630:
NOP
JSR GOSUB
JSR 47000
NOP
MOV Y,SD%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,CN%{INTEGER}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,SD%{INTEGER}
PUSH Y
NOP
MOV Y,#44{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#7{INTEGER}
MOV X,SL%{INTEGER}
MUL X,Y
MOV XC%{INTEGER},X
NOP
MOV Y,#12{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV DC%{INTEGER},Y
NOP
JSR GOSUB
JSR 30000
45640:
NOP
MOV Y,#0{INTEGER}
MOV X,CI%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP89
JMP SKIP89
NSKIP89:
JSR GOSUB
NOP
JSR 35670
NOP
NOP
MOV Y,#3{INTEGER}
MOV MD%{INTEGER},Y
SKIP89:
45660:
NOP
MOV Y,#0{INTEGER}
MOV CS%{INTEGER},Y
NOP
MOV Y,CS%{INTEGER}
MOV TC%{INTEGER},Y
NOP
JSR GOSUB
JSR 34700
NOP
JSR GOSUB
JSR 37000
45670:
NOP
JSR GOSUB
JSR 36500
NOP
MOV X,#0{INTEGER}
MOV G,CD%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
JMP RETURN
46000:
NOP
46010:
NOP
MOV Y,#7{INTEGER}
MOV X,FS%{INTEGER}
ADD X,Y
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV II%{INTEGER},X
NOP
MOV Y,#-1.0{REAL}
MOV X,II%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP90
JMP SKIP90
NSKIP90:
JMP RETURN
NOP
SKIP90:
46020:
NOP
JSR GOSUB
JSR 50550
NOP
MOV Y,#0{INTEGER}
MOV X,II%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP91
JMP SKIP91
NSKIP91:
NOP
NOP
MOV Y,#1000{INTEGER}
MOV X,II%{INTEGER}
ADD X,Y
MOV II%{INTEGER},X
NOP
NOP
MOV Y,#-1.0{REAL}
MOV DR%{INTEGER},Y
JMP 46050
NOP
SKIP91:
46030:
NOP
MOV Y,#1000{INTEGER}
MOV X,II%{INTEGER}
SUB X,Y
MOV II%{INTEGER},X
NOP
MOV Y,#1{INTEGER}
MOV DR%{INTEGER},Y
46050:
NOP
MOV Y,#7{INTEGER}
MOV X,FS%{INTEGER}
ADD X,Y
NOP
MOV Y,II%{INTEGER}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,XC%{INTEGER}
MOV TX%{INTEGER},Y
NOP
MOV Y,YC%{INTEGER}
MOV TY%{INTEGER},Y
NOP
MOV Y,CN%{INTEGER}
MOV TN%{INTEGER},Y
46060:
NOP
MOV X,FS%{INTEGER}
JSR FDEX
MOV Y,#7{INTEGER}
MUL X,Y
MOV XC%{INTEGER},X
NOP
MOV Y,#12{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV X,II%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP92
JMP SKIP92
NSKIP92:
JSR GOSUB
NOP
JSR 46200
JMP 46080
NOP
SKIP92:
46070:
NOP
MOV Y,II%{INTEGER}
MOV CN%{INTEGER},Y
NOP
MOV Y,#7{INTEGER}
MOV X,FS%{INTEGER}
ADD X,Y
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV HP%{INTEGER},X
NOP
JSR GOSUB
JSR 30000
46080:
NOP
JSR GOSUB
JSR 46400
NOP
MOV Y,TX%{INTEGER}
MOV XC%{INTEGER},Y
NOP
MOV Y,TY%{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV Y,TN%{INTEGER}
MOV CN%{INTEGER},Y
NOP
JMP RETURN
46200:
NOP
46210:
NOP
MOVB 646,#1{INTEGER}
NOP
MOV Y,XC%{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,YC%{INTEGER}
MOV CY%{INTEGER},Y
46220:
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{117}{99}{99}{99}{99}{99}{105}{STRING}
JSR STROUT
46230:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#5{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
NOP
JSR GOSUB
JSR 34500
46240:
NOP
MOV A,#{98}{rvson}{230}{230}{230}{230}{230}{rvsoff}{98}{STRING}
JSR STROUT
46250:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
46260:
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
NOP
JSR GOSUB
JSR 34500
46270:
NOP
MOV A,#{106}{99}{99}{99}{99}{99}{107}{STRING}
JSR STROUT
46280:
NOP
JMP RETURN
46400:
NOP
46405:
NOP
MOV Y,#7{INTEGER}
MOV X,FS%{INTEGER}
ADD X,Y
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV IR%{INTEGER},X
46410:
NOP
MOV Y,#0{INTEGER}
MOV X,IR%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP93
JMP SKIP93
NSKIP93:
NOP
NOP
MOV Y,#1000{INTEGER}
MOV X,IR%{INTEGER}
ADD X,Y
MOV Y,X
INT X,Y
MOV Y,#22{INTEGER}
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV AS%{INTEGER},X
NOP
NOP
MOV Y,#1{INTEGER}
MOV DA%{INTEGER},Y
JSR GOSUB
NOP
JSR 49360
JSR GOSUB
NOP
JSR 49370
JMP 46430
NOP
SKIP93:
46420:
NOP
MOV Y,#-1.0{REAL}
MOV DA%{INTEGER},Y
NOP
MOV Y,#22{INTEGER}
PUSH Y
MOV Y,IR%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV AS%{INTEGER},X
NOP
JSR GOSUB
JSR 49360
NOP
JSR GOSUB
JSR 49370
NOP
MOV Y,#0{INTEGER}
MOV X,HC%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP94
JMP SKIP94
NSKIP94:
NOP
NOP
MOV Y,#0{INTEGER}
MOV HC%{INTEGER},Y
SKIP94:
46430:
NOP
MOV Y,#9{INTEGER}
MOV X,HC%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP95
JMP SKIP95
NSKIP95:
NOP
NOP
MOV Y,#9{INTEGER}
MOV HC%{INTEGER},Y
SKIP95:
46435:
NOP
MOV Y,#9{INTEGER}
MOV X,BC%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP96
JMP SKIP96
NSKIP96:
NOP
NOP
MOV Y,#9{INTEGER}
MOV BC%{INTEGER},Y
SKIP96:
46440:
NOP
MOV Y,#15{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV X,FS%{INTEGER}
JSR FDEX
MOV Y,#7{INTEGER}
MUL X,Y
MOV Y,#3{INTEGER}
ADD X,Y
MOV CX%{INTEGER},X
NOP
JSR GOSUB
JSR 46570
46450:
NOP
JMP RETURN
46500:
NOP
46510:
NOP
MOVB 646,#1{INTEGER}
46530:
NOP
MOV Y,#0{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#22{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{37}:{STRING}
JSR STROUT
NOP
JSR COMPACTMAX
MOV C,#2{INTEGER}
PUSH C
MOV C,#-1{INTEGER}
PUSH C
MOV Y,BC%{INTEGER}
CHGCTX #1
JSR STR
MOV B,A
POP D
POP C
JSR MID
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,#32{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
JSR LINEBREAK
46540:
NOP
MOV Y,#0{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#23{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOVB 646,#2{INTEGER}
NOP
MOV A,#{92}{STRING}
JSR STROUT
NOP
MOVB 646,#1{INTEGER}
NOP
JSR COMPACTMAX
MOV Y,#58{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
JSR COMPACTMAX
MOV C,#2{INTEGER}
PUSH C
MOV C,#-1{INTEGER}
PUSH C
MOV Y,HC%{INTEGER}
CHGCTX #1
JSR STR
MOV B,A
POP D
POP C
JSR MID
JSR STROUT
NOP
JSR COMPACTMAX
MOV Y,#32{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
JSR LINEBREAK
46550:
NOP
JMP RETURN
46570:
NOP
46572:
NOP
MOV Y,CX%{INTEGER}
MOV VX%{INTEGER},Y
NOP
MOV Y,CY%{INTEGER}
MOV VY%{INTEGER},Y
46575:
NOP
MOV Y,#2{INTEGER}
MOV C%{INTEGER},Y
NOP
JSR GOSUB
JSR 46600
NOP
JSR GOSUB
JSR 46540
NOP
MOV Y,VX%{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,VY%{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV C%{INTEGER},Y
NOP
JSR GOSUB
JSR 46600
NOP
JSR GOSUB
JSR 46500
NOP
JMP RETURN
46600:
NOP
46610:
NOP
MOV Y,DC%{INTEGER}
MOV DZ%{INTEGER},Y
NOP
MOV Y,CX%{INTEGER}
MOV XS%{INTEGER},Y
NOP
MOV Y,CY%{INTEGER}
MOV YS%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV XE%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV X,C%{INTEGER}
EQ X,Y
MOV II%{INTEGER},X
NOP
MOV Y,II%{INTEGER}
MOV X,#22{INTEGER}
SUB X,Y
MOV YE%{INTEGER},X
NOP
MOV Y,II%{INTEGER}
MOV A,#3{INTEGER}
MOV X,Y
SHL X,A
ADD X,Y
MOV Y,#37{INTEGER}
ADD X,Y
MOV PV%{INTEGER},X
46615:
NOP
MOV Y,#-1.0{REAL}
MOV X,DR%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP97
JMP SKIP97
NSKIP97:
NOP
NOP
MOV Y,XS%{INTEGER}
MOV II%{INTEGER},Y
NOP
NOP
MOV Y,XE%{INTEGER}
MOV XS%{INTEGER},Y
NOP
NOP
MOV Y,II%{INTEGER}
MOV XE%{INTEGER},Y
NOP
NOP
MOV Y,YS%{INTEGER}
MOV II%{INTEGER},Y
NOP
NOP
MOV Y,YE%{INTEGER}
MOV YS%{INTEGER},Y
NOP
NOP
MOV Y,II%{INTEGER}
MOV YE%{INTEGER},Y
SKIP97:
46620:
NOP
MOV Y,XS%{INTEGER}
MOV X,XE%{INTEGER}
SUB X,Y
MOV DX{REAL},X
NOP
MOV Y,YS%{INTEGER}
MOV X,YE%{INTEGER}
SUB X,Y
MOV DY{REAL},X
46630:
NOP
MOV Y,DY{REAL}
ABS X,Y
PUSH X
MOV Y,DX{REAL}
ABS X,Y
POP Y
GT X,Y
CMP X,#0{REAL}
JNE NSKIP98
JMP SKIP98
NSKIP98:
NOP
NOP
MOV Y,DX{REAL}
ABS X,Y
MOV Y,X
MOV X,DY{REAL}
DIV X,Y
MOV DY{REAL},X
NOP
NOP
MOV Y,DX{REAL}
SGN X,Y
MOV DX{REAL},X
JMP 46645
NOP
SKIP98:
46640:
NOP
MOV Y,DY{REAL}
ABS X,Y
MOV Y,X
MOV X,DX{REAL}
DIV X,Y
MOV DX{REAL},X
NOP
MOV Y,DY{REAL}
SGN X,Y
MOV DY{REAL},X
46645:
NOP
MOV Y,XS%{INTEGER}
MOV I2{REAL},Y
NOP
MOV Y,YS%{INTEGER}
MOV I3{REAL},Y
46650:
NOP
MOV Y,I3{REAL}
INT X,Y
MOV A,#5{INTEGER}
MOV Y,X
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
PUSH X
MOV Y,I2{REAL}
INT X,Y
POP Y
ADD X,Y
MOV Y,SA{REAL}
ADD X,Y
MOV PP{REAL},X
46655:
NOP
MOV Y,PP{REAL}
MOVB X,(Y)
MOV CH%{INTEGER},X
NOP
MOV Y,CA{REAL}
MOV X,PP{REAL}
ADD X,Y
MOV Y,X
MOVB X,(Y)
MOV DC%{INTEGER},X
46660:
NOP
MOV Y,PP{REAL}
PUSH Y
MOV X,PV%{INTEGER}
POP Y
MOVB (Y),X
NOP
MOV Y,CA{REAL}
MOV X,PP{REAL}
ADD X,Y
PUSH X
MOV X,C%{INTEGER}
POP Y
MOVB (Y),X
46670:
NOP
MOV Y,DX{REAL}
MOV X,I2{REAL}
ADD X,Y
MOV I2{REAL},X
NOP
MOV Y,DY{REAL}
MOV X,I3{REAL}
ADD X,Y
MOV I3{REAL},X
46672:
NOP
MOV Y,TI{REAL}
MOV TS{REAL},Y
NOP
JSR GOSUB
JSR 22000
46674:
NOP
MOV Y,TS{REAL}
MOV X,TI{REAL}
SUB X,Y
MOV Y,#0{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP99
JMP SKIP99
NSKIP99:
JMP 46674
NOP
SKIP99:
46680:
NOP
MOV Y,PP{REAL}
PUSH Y
MOV X,CH%{INTEGER}
POP Y
MOVB (Y),X
NOP
MOV Y,CA{REAL}
MOV X,PP{REAL}
ADD X,Y
PUSH X
MOV X,DC%{INTEGER}
POP Y
MOVB (Y),X
46690:
NOP
MOV Y,#0.5{REAL}
MOV X,I2{REAL}
ADD X,Y
MOV Y,X
INT X,Y
MOV Y,XE%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP100
JMP SKIP100
NSKIP100:
NOP
NOP
MOV Y,#0.5{REAL}
MOV X,I3{REAL}
ADD X,Y
MOV Y,X
INT X,Y
MOV Y,YE%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP101
JMP SKIP101
NSKIP101:
NOP
MOV Y,DZ%{INTEGER}
NOP
MOV DC%{INTEGER},Y
JMP RETURN
SKIP101:
NOP
SKIP100:
46700:
NOP
JMP 46650
46800:
NOP
46810:
NOP
MOV Y,#0{INTEGER}
MOV II%{INTEGER},Y
NOP
MOV Y,#66{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV I2%{INTEGER},X
NOP
MOV Y,#0{INTEGER}
MOV X,I2%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP102
JMP SKIP102
NSKIP102:
JMP 46850
NOP
SKIP102:
46820:
NOP
MOV Y,I2%{INTEGER}
MOV X,HC%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP103
JMP SKIP103
NSKIP103:
NOP
NOP
MOV Y,#1{INTEGER}
MOV II%{INTEGER},Y
NOP
NOP
MOV Y,#1{INTEGER}
MOV MG%{INTEGER},Y
JSR GOSUB
NOP
JSR 50000
JSR GOSUB
NOP
JSR 40000
SKIP103:
46830:
NOP
JMP RETURN
46850:
NOP
MOV Y,#88{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV I2%{INTEGER},X
NOP
MOV Y,#0{INTEGER}
MOV X,I2%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP104
JMP SKIP104
NSKIP104:
JMP RETURN
NOP
SKIP104:
46860:
NOP
MOV Y,I2%{INTEGER}
MOV X,BC%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP105
JMP SKIP105
NSKIP105:
NOP
NOP
MOV Y,#1{INTEGER}
MOV II%{INTEGER},Y
NOP
NOP
MOV Y,#2{INTEGER}
MOV MG%{INTEGER},Y
JSR GOSUB
NOP
JSR 50000
JSR GOSUB
NOP
JSR 40000
SKIP105:
46870:
NOP
JMP RETURN
47000:
NOP
47005:
NOP
MOV Y,#66{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
MOV X,HC%{INTEGER}
SUB X,Y
MOV HC%{INTEGER},X
NOP
MOV Y,#88{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
MOV X,BC%{INTEGER}
SUB X,Y
MOV BC%{INTEGER},X
47010:
NOP
MOV Y,#8{INTEGER}
MOV II{REAL},Y
NOP
MOV Y,#11{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(II{REAL})
JSR INITFOR
NOP
MOV X,II{REAL}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
GTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP106
JMP SKIP106
NSKIP106:
JMP 47050
NOP
SKIP106:
47040:
NOP
JSR GOSUB
JSR 46500
NOP
MOV Y,#12{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,#8{INTEGER}
MOV X,II{REAL}
SUB X,Y
MOV Y,#7{INTEGER}
MUL X,Y
MOV CX%{INTEGER},X
NOP
JSR GOSUB
JSR 47200
NOP
MOV Y,II{REAL}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
47050:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JSR GOSUB
JSR 46500
NOP
JMP RETURN
47200:
NOP
47210:
NOP
MOVB 646,#1{INTEGER}
47230:
NOP
MOV Y,#0{INTEGER}
MOV P{REAL},Y
NOP
MOV Y,#7{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(P{REAL})
JSR INITFOR
NOP
JSR GOSUB
JSR 34500
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
47240:
NOP
MOV A,#{7*space}{STRING}
JSR STROUT
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
47250:
NOP
JMP RETURN
47300:
NOP
47310:
NOP
MOVB 646,#1{INTEGER}
47330:
NOP
MOV Y,#0{INTEGER}
MOV P{REAL},Y
NOP
MOV Y,#7{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(P{REAL})
JSR INITFOR
NOP
JSR GOSUB
JSR 34500
47340:
NOP
MOV Y,#7{INTEGER}
MOV X,P{REAL}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP107
JMP SKIP107
NSKIP107:
NOP
NOP
MOV A,#{117}{99}{99}{99}{99}{99}{105}{STRING}
JSR STROUT
SKIP107:
47345:
NOP
MOV Y,TI{REAL}
MOV TS{REAL},Y
47346:
NOP
MOV Y,TS{REAL}
MOV X,TI{REAL}
SUB X,Y
MOV Y,#2{INTEGER}
LTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP108
JMP SKIP108
NSKIP108:
JSR GOSUB
NOP
JSR 22000
JMP 47346
NOP
SKIP108:
47350:
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{7*space}{STRING}
JSR STROUT
JSR LINEBREAK
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
47360:
NOP
JMP RETURN
47400:
NOP
47410:
NOP
MOV Y,#4{INTEGER}
MOV MD%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV CS%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV CI%{INTEGER},Y
47420:
NOP
MOV Y,#1{INTEGER}
MOV X,WN%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP109
JMP SKIP109
NSKIP109:
NOP
NOP
MOV X,AL%{INTEGER}
JSR FINX
MOV AL%{INTEGER},X
NOP
NOP
MOV Y,#10{INTEGER}
MOV X,AL%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP110
JMP SKIP110
NSKIP110:
NOP
MOV Y,#10{INTEGER}
NOP
MOV AL%{INTEGER},Y
SKIP110:
SKIP109:
47430:
NOP
JSR GOSUB
JSR 47900
NOP
MOV Y,#2{INTEGER}
MOV X,WN%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP111
JMP SKIP111
NSKIP111:
JMP RETURN
NOP
SKIP111:
47432:
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,CK%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,CK%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#0{INTEGER}
MOV II%{INTEGER},Y
47435:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#7{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV X,I{REAL}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CC%{INTEGER},X
NOP
MOV Y,#1{INTEGER}
MOV X,CC%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP112
JMP SKIP112
NSKIP112:
JMP 47455
NOP
SKIP112:
47440:
NOP
MOV Y,#2{INTEGER}
MOV X,II%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP113
JMP SKIP113
NSKIP113:
NOP
NOP
MOV Y,II%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,CC%{INTEGER}
MOV G,CK%[]{INTEGER}
JSR ARRAYSTORE
NOP
NOP
MOV X,II%{INTEGER}
JSR FINX
MOV II%{INTEGER},X
JMP 47455
NOP
SKIP113:
47445:
NOP
MOV Y,#0{INTEGER}
MOV P{REAL},Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(P{REAL})
JSR INITFOR
NOP
MOV Y,CC%{INTEGER}
INT X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
PUSH X
MOV X,P{REAL}
MOV G,CK%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
INT X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
LT X,Y
CMP X,#0{REAL}
JNE NSKIP114
JMP SKIP114
NSKIP114:
NOP
NOP
MOV Y,P{REAL}
PUSH Y
NOP
POP X
MOV Y,CC%{INTEGER}
MOV G,CK%[]{INTEGER}
JSR ARRAYSTORE
NOP
NOP
MOV Y,II%{INTEGER}
MOV P{REAL},Y
MOV A,#0{INTEGER}
NOP
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
SKIP114:
47455:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#1{INTEGER}
MOV X,II%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP115
JMP SKIP115
NSKIP115:
JMP 47470
NOP
SKIP115:
47460:
NOP
MOV Y,II%{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
JSR GOSUB
JSR 57200
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,RS%{INTEGER}
MOV G,CK%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
47470:
NOP
JMP RETURN
47500:
NOP
47505:
NOP
JSR GOSUB
JSR 57250
NOP
MOV Y,#3{INTEGER}
MOV MG%{INTEGER},Y
NOP
JSR GOSUB
JSR 40000
47510:
NOP
MOV Y,#1{INTEGER}
MOV RW%{INTEGER},Y
NOP
MOV Y,#-1.0{REAL}
MOV DR%{INTEGER},Y
NOP
JSR GOSUB
JSR 48000
47520:
NOP
MOV Y,OV%{INTEGER}
MOV X,S1%{INTEGER}
ADD X,Y
MOV S1%{INTEGER},X
NOP
MOV Y,#5{INTEGER}
MOV CC%{INTEGER},Y
NOP
JSR GOSUB
JSR 47800
NOP
MOV Y,#0{INTEGER}
MOV X,WN%{INTEGER}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP116
JMP SKIP116
NSKIP116:
JSR GOSUB
NOP
JSR 47400
JMP RETURN
NOP
SKIP116:
47530:
NOP
MOV Y,#0{INTEGER}
MOV RW%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV DR%{INTEGER},Y
NOP
JSR GOSUB
JSR 48000
47535:
NOP
MOV X,UR%{INTEGER}
JSR FINX
MOV UR%{INTEGER},X
NOP
MOV Y,#0{INTEGER}
MOV X,OV%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP117
JMP SKIP117
NSKIP117:
NOP
NOP
MOV Y,#0{INTEGER}
MOV UR%{INTEGER},Y
SKIP117:
47540:
NOP
MOV Y,OV%{INTEGER}
MOV X,S2%{INTEGER}
ADD X,Y
MOV S2%{INTEGER},X
NOP
MOV Y,#2{INTEGER}
MOV CC%{INTEGER},Y
NOP
JSR GOSUB
JSR 47800
NOP
MOV Y,#0{INTEGER}
MOV X,WN%{INTEGER}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP118
JMP SKIP118
NSKIP118:
JSR GOSUB
NOP
JSR 47400
JMP RETURN
NOP
SKIP118:
47550:
NOP
JSR GOSUB
JSR 58000
NOP
JSR GOSUB
JSR 49550
NOP
JSR GOSUB
JSR 52000
NOP
MOV Y,#0{INTEGER}
MOV MD%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV CS%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV CI%{INTEGER},Y
NOP
JMP RETURN
47600:
NOP
47610:
NOP
MOV Y,#24{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,#13{INTEGER}
MOV CX%{INTEGER},Y
47620:
NOP
JSR GOSUB
JSR 57400
NOP
JMP RETURN
47700:
NOP
47705:
NOP
MOV Y,#0{INTEGER}
MOV X,OV%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP119
JMP SKIP119
NSKIP119:
JMP 47730
NOP
SKIP119:
47710:
NOP
MOVB X,646
MOV P2%{INTEGER},X
NOP
MOV Y,#13{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#24{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV X,CC%{INTEGER}
MOVB 646,X
NOP
JSR COMPACTMAX
MOV C,#1{INTEGER}
PUSH C
MOV Y,OV%{INTEGER}
CHGCTX #1
JSR STR
MOV B,A
POP C
JSR RIGHT
JSR STROUT
47720:
NOP
MOV Y,#1{INTEGER}
MOV WT%{INTEGER},Y
NOP
JSR GOSUB
JSR 40300
NOP
MOV X,P2%{INTEGER}
MOVB 646,X
47730:
NOP
JSR GOSUB
JSR 47600
NOP
JMP RETURN
47800:
NOP
47810:
NOP
MOV Y,S2%{INTEGER}
MOV X,S1%{INTEGER}
SUB X,Y
MOV II%{INTEGER},X
NOP
MOV Y,#40{INTEGER}
MOV X,S1%{INTEGER}
GT X,Y
PUSH X
MOV Y,#8{INTEGER}
MOV X,II%{INTEGER}
GTEQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP120
JMP SKIP120
NSKIP120:
NOP
NOP
MOV Y,#1{INTEGER}
MOV WN%{INTEGER},Y
JMP 47830
NOP
SKIP120:
47820:
NOP
MOV Y,#40{INTEGER}
MOV X,S2%{INTEGER}
GT X,Y
PUSH X
MOV Y,#-8.0{REAL}
MOV X,II%{INTEGER}
LTEQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP121
JMP SKIP121
NSKIP121:
NOP
NOP
MOV Y,#2{INTEGER}
MOV WN%{INTEGER},Y
SKIP121:
47830:
NOP
JSR GOSUB
JSR 47700
NOP
MOV Y,#0{INTEGER}
MOV X,TP%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP122
JMP SKIP122
NSKIP122:
JMP RETURN
NOP
SKIP122:
47832:
NOP
MOV Y,#4{INTEGER}
MOV X,UR%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP123
JMP SKIP123
NSKIP123:
JMP 47840
NOP
SKIP123:
47835:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#7{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV X,I{REAL}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP124
JMP SKIP124
NSKIP124:
NOP
NOP
MOV Y,#0{INTEGER}
MOV X,I{REAL}
PUSH Y
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
INT X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
GT X,Y
CMP X,#0{REAL}
JNE NSKIP125
JMP SKIP125
NSKIP125:
JMP RETURN
SKIP125:
NOP
SKIP124:
47836:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
47840:
NOP
MOV Y,#1{INTEGER}
MOV WN%{INTEGER},Y
NOP
MOV Y,#8{INTEGER}
MOV MG%{INTEGER},Y
NOP
JSR GOSUB
JSR 40000
NOP
JMP RETURN
47900:
NOP
47910:
NOP
MOV Y,AL%{INTEGER}
MOV A,#1{INTEGER}
MOV X,Y
SHL X,A
ADD X,Y
MOV A%{INTEGER},X
NOP
MOV X,A%{INTEGER}
MOV G,SK%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV TP%{INTEGER},X
NOP
MOV X,A%{INTEGER}
JSR FINX
MOV G,SK%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#10{INTEGER}
DIV X,Y
MOV FQ{REAL},X
NOP
MOV Y,#2{INTEGER}
MOV X,A%{INTEGER}
ADD X,Y
MOV G,SK%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV HF%{INTEGER},X
47920:
NOP
JMP RETURN
48000:
NOP
48010:
NOP
MOV A,#2{INTEGER}
MOV X,RW%{INTEGER}
SHL X,A
MOV Y,#4{INTEGER}
ADD X,Y
MOV I2%{INTEGER},X
NOP
MOV Y,#3{INTEGER}
MOV X,I2%{INTEGER}
ADD X,Y
MOV I3%{INTEGER},X
NOP
48015:
NOP
MOV Y,#0{INTEGER}
MOV OV%{INTEGER},Y
NOP
MOV A,#2{INTEGER}
MOV X,DR%{INTEGER}
SHL X,A
MOV Y,I2%{INTEGER}
ADD X,Y
MOV I4%{INTEGER},X
NOP
MOV A,#2{INTEGER}
MOV X,DR%{INTEGER}
SHL X,A
MOV Y,I3%{INTEGER}
ADD X,Y
MOV I5%{INTEGER},X
NOP
48020:
NOP
MOV X,I2%{INTEGER}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
MOV X,I2%{INTEGER}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV HH%{INTEGER},X
NOP
MOV Y,#-1.0{REAL}
MOV X,CN%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP126
JMP SKIP126
NSKIP126:
JMP 48210
NOP
SKIP126:
48022:
NOP
MOV Y,CN%{INTEGER}
INT X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV AV%{INTEGER},X
NOP
MOV Y,#22{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV SG%{INTEGER},X
NOP
MOV A,#2{INTEGER}
MOV X,DR%{INTEGER}
SHL X,A
MOV Y,I2%{INTEGER}
ADD X,Y
MOV IB%{INTEGER},X
NOP
48025:
NOP
MOV Y,#0{INTEGER}
MOV X,AV%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP127
JMP SKIP127
NSKIP127:
JMP 48210
NOP
NOP
NOP
SKIP127:
48030:
NOP
MOV Y,IB%{INTEGER}
MOV P0%{INTEGER},Y
NOP
MOV Y,IB%{INTEGER}
MOV P1%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV P2%{INTEGER},Y
NOP
48040:
NOP
MOV Y,#7{INTEGER}
MOV X,SG%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP128
JMP SKIP128
NSKIP128:
NOP
NOP
MOV X,P0%{INTEGER}
JSR FDEX
MOV P0%{INTEGER},X
NOP
NOP
MOV X,P1%{INTEGER}
JSR FINX
MOV P1%{INTEGER},X
NOP
NOP
MOV Y,#2{INTEGER}
MOV P2%{INTEGER},Y
NOP
NOP
SKIP128:
48050:
NOP
MOV Y,#8{INTEGER}
MOV X,SG%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP129
JMP SKIP129
NSKIP129:
NOP
NOP
MOV X,P0%{INTEGER}
JSR FDEX
MOV P0%{INTEGER},X
NOP
NOP
MOV X,P1%{INTEGER}
JSR FINX
MOV P1%{INTEGER},X
NOP
NOP
MOV Y,#1{INTEGER}
MOV P2%{INTEGER},Y
NOP
NOP
SKIP129:
48060:
NOP
MOV Y,I4%{INTEGER}
MOV X,P0%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP130
JMP SKIP130
NSKIP130:
NOP
NOP
MOV Y,P2%{INTEGER}
MOV X,P0%{INTEGER}
ADD X,Y
MOV P0%{INTEGER},X
SKIP130:
48070:
NOP
MOV Y,I5%{INTEGER}
MOV X,P1%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP131
JMP SKIP131
NSKIP131:
NOP
NOP
MOV Y,P2%{INTEGER}
MOV X,P1%{INTEGER}
SUB X,Y
MOV P1%{INTEGER},X
SKIP131:
48080:
NOP
MOV Y,P0%{INTEGER}
MOV IB%{INTEGER},Y
NOP
MOV Y,IB%{INTEGER}
MOV IO%{INTEGER},Y
48090:
NOP
MOV X,IB%{INTEGER}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CB%{INTEGER},X
NOP
MOV X,IB%{INTEGER}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV HP%{INTEGER},X
48100:
NOP
JSR GOSUB
JSR 50200
NOP
MOV Y,#-1.0{REAL}
MOV X,CB%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP132
JMP SKIP132
NSKIP132:
NOP
NOP
MOV Y,AV%{INTEGER}
MOV X,OV%{INTEGER}
ADD X,Y
MOV OV%{INTEGER},X
JMP 48200
NOP
SKIP132:
48110:
NOP
MOV Y,#22{INTEGER}
PUSH Y
MOV Y,CB%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV AS%{INTEGER},X
NOP
MOV Y,AV%{INTEGER}
MOV TV%{INTEGER},Y
NOP
JSR GOSUB
JSR 49500
NOP
JSR GOSUB
JSR 49900
NOP
MOV Y,AV%{INTEGER}
MOV X,HP%{INTEGER}
SUB X,Y
MOV HP%{INTEGER},X
NOP
MOV Y,TV%{INTEGER}
MOV AV%{INTEGER},Y
48120:
NOP
MOV Y,#0{INTEGER}
MOV X,HP%{INTEGER}
LTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP133
JMP SKIP133
NSKIP133:
JSR GOSUB
NOP
JSR 49000
NOP
NOP
MOV Y,HP%{INTEGER}
MOV X,OV%{INTEGER}
SUB X,Y
MOV OV%{INTEGER},X
JMP 48200
NOP
SKIP133:
48130:
NOP
MOV Y,IB%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,HP%{INTEGER}
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
NOP
JSR GOSUB
JSR 49300
NOP
MOV Y,CB%{INTEGER}
MOV CN%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV X,AV%{INTEGER}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP134
JMP SKIP134
NSKIP134:
JSR GOSUB
NOP
JSR 49470
SKIP134:
48200:
NOP
MOV Y,P2%{INTEGER}
MOV X,IB%{INTEGER}
ADD X,Y
MOV IB%{INTEGER},X
NOP
MOV Y,#0{INTEGER}
MOV X,HH%{INTEGER}
GT X,Y
PUSH X
MOV Y,P1%{INTEGER}
MOV X,IB%{INTEGER}
LTEQ X,Y
PUSH X
MOV Y,IO%{INTEGER}
MOV X,IB%{INTEGER}
NEQ X,Y
POP Y
AND X,Y
POP Y
AND X,Y
CMP X,#0{REAL}
JNE NSKIP135
JMP SKIP135
NSKIP135:
JMP 48090
NOP
SKIP135:
48210:
NOP
MOV X,I2%{INTEGER}
JSR FINX
MOV I2%{INTEGER},X
NOP
MOV Y,I3%{INTEGER}
MOV X,I2%{INTEGER}
LTEQ X,Y
CMP X,#0{REAL}
JNE NSKIP136
JMP SKIP136
NSKIP136:
JMP 48020
NOP
SKIP136:
48215:
NOP
MOV Y,#9{INTEGER}
MOV X,OV%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP137
JMP SKIP137
NSKIP137:
NOP
NOP
MOV Y,#9{INTEGER}
MOV OV%{INTEGER},Y
SKIP137:
48220:
NOP
JMP RETURN
48300:
NOP
48310:
NOP
MOV Y,#1{INTEGER}
MOV C%{INTEGER},Y
NOP
JSR GOSUB
JSR 49300
NOP
MOV Y,#3{INTEGER}
MOV X,CX%{INTEGER}
ADD X,Y
MOV CX%{INTEGER},X
NOP
MOV Y,#15{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV DR%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV DA%{INTEGER},Y
NOP
JSR GOSUB
JSR 46600
NOP
JSR GOSUB
JSR 49400
48320:
NOP
JMP RETURN
48400:
NOP
48410:
NOP
MOV Y,#1{INTEGER}
MOV X,WN%{INTEGER}
NEQ X,Y
PUSH X
MOV Y,#99{INTEGER}
MOV X,PN%{INTEGER}
GTEQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP138
JMP SKIP138
NSKIP138:
JMP RETURN
NOP
SKIP138:
48420:
NOP
JSR GOSUB
JSR 29800
NOP
MOV Y,#7{INTEGER}
MOV XC%{INTEGER},Y
48440:
NOP
MOV Y,#0{INTEGER}
MOV II{REAL},Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(II{REAL})
JSR INITFOR
NOP
MOV X,II{REAL}
MOV G,CK%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
MOV Y,#-1.0{REAL}
MOV HP%{INTEGER},Y
NOP
MOV Y,#4{INTEGER}
MOV YC%{INTEGER},Y
NOP
JSR GOSUB
JSR 30000
48450:
NOP
MOV Y,#7{INTEGER}
MOV X,XC%{INTEGER}
ADD X,Y
MOV XC%{INTEGER},X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#7{INTEGER}
MOV MG%{INTEGER},Y
NOP
JSR GOSUB
JSR 40000
48460:
NOP
JSR GOSUB
JSR 35850
48470:
NOP
MOV Y,#8{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#4{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
JSR COMPACTMAX
MOV Y,#49{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
JSR LINEBREAK
48480:
NOP
MOV Y,#15{INTEGER}
MOV CX%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
JSR COMPACTMAX
MOV Y,#50{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
JSR LINEBREAK
48490:
NOP
JSR GOSUB
JSR 36000
NOP
MOV B,#2{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SGT
PUSH X
CHGCTX #1
MOV B,#1{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SLT
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP139
JMP SKIP139
NSKIP139:
JMP 48460
NOP
SKIP139:
48500:
NOP
JSR GOSUB
JSR 50900
NOP
MOV B,A${STRING}
JSR VAL
MOV Y,#1{INTEGER}
SUB X,Y
MOV II%{INTEGER},X
NOP
MOV Y,PN%{INTEGER}
PUSH Y
NOP
MOV X,II%{INTEGER}
MOV G,CK%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,CP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV X,PN%{INTEGER}
JSR FINX
MOV PN%{INTEGER},X
48510:
NOP
MOV Y,#4{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,II%{INTEGER}
MOV X,#7{INTEGER}
MUL X,Y
MOV Y,#7{INTEGER}
ADD X,Y
MOV CX%{INTEGER},X
NOP
JSR GOSUB
JSR 47300
NOP
JMP RETURN
49000:
NOP
49020:
NOP
MOV Y,#1{INTEGER}
MOV X,DR%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP140
JMP SKIP140
NSKIP140:
JSR GOSUB
NOP
JSR 48300
SKIP140:
49030:
NOP
JSR GOSUB
JSR 49300
NOP
JSR GOSUB
JSR 50600
NOP
JSR GOSUB
JSR 47300
49040:
NOP
MOV Y,IB%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
JMP RETURN
49300:
NOP
49310:
NOP
MOV A,#2{INTEGER}
MOV X,IB%{INTEGER}
SHR X,A
MOV Y,X
INT X,Y
MOV A,#2{INTEGER}
SHL X,A
MOV Y,X
MOV X,IB%{INTEGER}
SUB X,Y
MOV Y,#7{INTEGER}
MUL X,Y
MOV CX%{INTEGER},X
NOP
MOV A,#2{INTEGER}
MOV X,DR%{INTEGER}
SHL X,A
MOV Y,#8{INTEGER}
ADD X,Y
MOV CY%{INTEGER},X
NOP
JMP RETURN
49330:
NOP
49340:
NOP
JSR GOSUB
JSR 49300
NOP
MOV Y,#4{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,#7{INTEGER}
MOV X,IB%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP141
JMP SKIP141
NSKIP141:
NOP
NOP
MOV Y,#12{INTEGER}
MOV CY%{INTEGER},Y
SKIP141:
49345:
NOP
JMP RETURN
49350:
NOP
49355:
NOP
MOV Y,DR%{INTEGER}
NEG X,Y
MOV DR%{INTEGER},X
NOP
MOV Y,IB%{INTEGER}
MOV IT%{INTEGER},Y
NOP
MOV Y,I2%{INTEGER}
MOV IB%{INTEGER},Y
NOP
JSR GOSUB
JSR 49300
NOP
MOV Y,IT%{INTEGER}
MOV IB%{INTEGER},Y
NOP
MOV Y,DR%{INTEGER}
NEG X,Y
MOV DR%{INTEGER},X
NOP
JMP RETURN
49360:
NOP
49365:
NOP
MOV Y,#13{INTEGER}
MOV X,AS%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP142
JMP SKIP142
NSKIP142:
NOP
NOP
MOV Y,DA%{INTEGER}
MOV A,#1{INTEGER}
MOV X,Y
SHL X,A
ADD X,Y
MOV Y,HC%{INTEGER}
ADD X,Y
MOV HC%{INTEGER},X
JMP RETURN
NOP
SKIP142:
49368:
NOP
MOV Y,DA%{INTEGER}
MOV X,HC%{INTEGER}
ADD X,Y
MOV HC%{INTEGER},X
NOP
JMP RETURN
49370:
NOP
49375:
NOP
MOV Y,#14{INTEGER}
MOV X,AS%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP143
JMP SKIP143
NSKIP143:
NOP
NOP
MOV Y,DA%{INTEGER}
MOV A,#1{INTEGER}
MOV X,Y
SHL X,A
ADD X,Y
MOV Y,BC%{INTEGER}
ADD X,Y
MOV BC%{INTEGER},X
JMP RETURN
NOP
SKIP143:
49380:
NOP
MOV Y,DA%{INTEGER}
MOV X,BC%{INTEGER}
ADD X,Y
MOV BC%{INTEGER},X
NOP
JMP RETURN
49400:
NOP
49410:
NOP
JSR GOSUB
JSR 49370
NOP
JSR GOSUB
JSR 46500
NOP
JMP RETURN
49450:
NOP
49460:
NOP
JMP RETURN
49470:
NOP
49480:
NOP
MOV Y,CX%{INTEGER}
MOV XC%{INTEGER},Y
NOP
MOV Y,CY%{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV Y,CX%{INTEGER}
MOV X1%{INTEGER},Y
NOP
MOV Y,CY%{INTEGER}
MOV Y1%{INTEGER},Y
NOP
JSR GOSUB
JSR 30010
NOP
MOV Y,Y1%{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,X1%{INTEGER}
MOV CX%{INTEGER},Y
NOP
JMP RETURN
49500:
NOP
49510:
NOP
MOV Y,AS%{INTEGER}
INT Y,Y
ON1SUB0:
CMP Y,#1{INTEGER}
JNE ON1SUB1
JSR GOSUB
JSR 49600
JMP GSKIPON1
ON1SUB1:
CMP Y,#2{INTEGER}
JNE ON1SUB2
JSR GOSUB
JSR 49450
JMP GSKIPON1
ON1SUB2:
CMP Y,#3{INTEGER}
JNE ON1SUB3
JSR GOSUB
JSR 49650
JMP GSKIPON1
ON1SUB3:
CMP Y,#4{INTEGER}
JNE ON1SUB4
JSR GOSUB
JSR 49700
JMP GSKIPON1
ON1SUB4:
CMP Y,#5{INTEGER}
JNE ON1SUB5
JSR GOSUB
JSR 49750
JMP GSKIPON1
ON1SUB5:
CMP Y,#6{INTEGER}
JNE ON1SUB6
JSR GOSUB
JSR 49800
JMP GSKIPON1
ON1SUB6:
CMP Y,#7{INTEGER}
JNE ON1SUB7
JSR GOSUB
JSR 49450
JMP GSKIPON1
ON1SUB7:
CMP Y,#8{INTEGER}
JNE ON1SUB8
JSR GOSUB
JSR 49450
JMP GSKIPON1
ON1SUB8:
CMP Y,#9{INTEGER}
JNE GSKIPON1
JSR GOSUB
JSR 49850
JMP GSKIPON1
GSKIPON1:
49520:
NOP
JMP RETURN
49550:
NOP
49555:
NOP
MOV Y,#4{INTEGER}
MOV P0{REAL},Y
NOP
MOV Y,#7{INTEGER}
MOV P1{REAL},Y
NOP
JSR GOSUB
JSR 49560
NOP
MOV Y,#8{INTEGER}
MOV P0{REAL},Y
NOP
MOV Y,#11{INTEGER}
MOV P1{REAL},Y
NOP
JSR GOSUB
JSR 49560
NOP
JMP RETURN
49559:
NOP
49560:
NOP
MOV Y,P0{REAL}
MOV IC{REAL},Y
NOP
MOV Y,P1{REAL}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(IC{REAL})
JSR INITFOR
NOP
MOV Y,#22{INTEGER}
MOV X,IC{REAL}
PUSH Y
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV AS%{INTEGER},X
49565:
NOP
MOV Y,#9{INTEGER}
MOV X,AS%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP144
JMP SKIP144
NSKIP144:
NOP
NOP
MOV Y,#9{INTEGER}
MOV X,AS%{INTEGER}
SUB X,Y
INT X,X
ON2SUB0:
CMP X,#1{INTEGER}
JNE ON2SUB1
JSR GOSUB
JSR 51500
JMP GSKIPON2
ON2SUB1:
CMP X,#2{INTEGER}
JNE GSKIPON2
JSR GOSUB
JSR 51600
JMP GSKIPON2
GSKIPON2:
SKIP144:
49570:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
49600:
NOP
49605:
NOP
MOV X,HH%{INTEGER}
JSR FDEX
MOV HH%{INTEGER},X
NOP
MOV Y,I2%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,HH%{INTEGER}
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,CX%{INTEGER}
MOV P3%{INTEGER},Y
NOP
MOV Y,CY%{INTEGER}
MOV P4%{INTEGER},Y
49610:
NOP
JSR GOSUB
JSR 49350
NOP
MOV Y,#0{INTEGER}
MOV X,HH%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP145
JMP SKIP145
NSKIP145:
JMP 49615
NOP
SKIP145:
49612:
NOP
MOV Y,I2%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#-1.0{REAL}
MOV X,DR%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP146
JMP SKIP146
NSKIP146:
JSR GOSUB
NOP
JSR 48300
NOP
NOP
MOV Y,#-1.0{REAL}
MOV DR%{INTEGER},Y
JSR GOSUB
NOP
JSR 49350
SKIP146:
49613:
NOP
JSR GOSUB
JSR 50600
NOP
JSR GOSUB
JSR 47300
NOP
JMP 49630
49615:
NOP
MOV Y,HP%{INTEGER}
MOV IT%{INTEGER},Y
NOP
MOV Y,HH%{INTEGER}
MOV HP%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV DC%{INTEGER},Y
NOP
JSR GOSUB
JSR 49470
NOP
MOV Y,#1{INTEGER}
MOV WT%{INTEGER},Y
49620:
NOP
JSR GOSUB
JSR 40300
NOP
MOV Y,HH%{INTEGER}
MOV HP%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV DC%{INTEGER},Y
NOP
JSR GOSUB
JSR 49470
NOP
MOV Y,IT%{INTEGER}
MOV HP%{INTEGER},Y
49630:
NOP
MOV Y,P3%{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,P4%{INTEGER}
MOV CY%{INTEGER},Y
NOP
JMP RETURN
49650:
NOP
49655:
NOP
MOV Y,AV%{INTEGER}
MOV X,HP%{INTEGER}
SUB X,Y
MOV Y,#0{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP147
JMP SKIP147
NSKIP147:
JMP RETURN
NOP
SKIP147:
49660:
NOP
MOV Y,CM%{INTEGER}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV IT%{INTEGER},X
NOP
MOV Y,#0{INTEGER}
MOV AV%{INTEGER},Y
NOP
MOV Y,IT%{INTEGER}
MOV CN%{INTEGER},Y
49665:
NOP
MOV Y,IB%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,IT%{INTEGER}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#44{INTEGER}
PUSH Y
MOV Y,IT%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV HP%{INTEGER},X
NOP
MOV Y,IB%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,HP%{INTEGER}
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
49670:
NOP
JSR GOSUB
JSR 50900
NOP
JSR GOSUB
JSR 49300
NOP
MOV Y,#1{INTEGER}
MOV DC%{INTEGER},Y
NOP
JSR GOSUB
JSR 49470
49675:
NOP
MOV X,IB%{INTEGER}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV HP%{INTEGER},X
49680:
NOP
MOV Y,CN%{INTEGER}
MOV CB%{INTEGER},Y
49690:
NOP
JMP RETURN
49700:
NOP
49710:
NOP
MOV X,AV%{INTEGER}
JSR FDEX
MOV AV%{INTEGER},X
NOP
JMP RETURN
49750:
NOP
49760:
NOP
MOV Y,#6{INTEGER}
MOV X,SG%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP148
JMP SKIP148
NSKIP148:
JSR GOSUB
NOP
JSR 50500
NOP
NOP
MOV Y,AV%{INTEGER}
MOV X,OV%{INTEGER}
ADD X,Y
MOV OV%{INTEGER},X
NOP
NOP
MOV Y,#0{INTEGER}
MOV AV%{INTEGER},Y
SKIP148:
49765:
NOP
JMP RETURN
49800:
NOP
49810:
NOP
MOV Y,#5{INTEGER}
MOV X,SG%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP149
JMP SKIP149
NSKIP149:
JSR GOSUB
NOP
JSR 50400
NOP
NOP
MOV Y,AV%{INTEGER}
MOV X,OV%{INTEGER}
ADD X,Y
MOV OV%{INTEGER},X
NOP
NOP
MOV Y,#0{INTEGER}
MOV AV%{INTEGER},Y
SKIP149:
49815:
NOP
JMP RETURN
49850:
NOP
49852:
NOP
MOV Y,#-1.0{REAL}
MOV X,DR%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP150
JMP SKIP150
NSKIP150:
JMP RETURN
NOP
SKIP150:
49855:
NOP
MOV Y,#99{INTEGER}
MOV X,PI%{INTEGER}
GTEQ X,Y
PUSH X
MOV Y,AV%{INTEGER}
MOV X,HP%{INTEGER}
SUB X,Y
MOV Y,#0{INTEGER}
GT X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP151
JMP SKIP151
NSKIP151:
JMP RETURN
NOP
SKIP151:
49860:
NOP
MOV Y,#1{INTEGER}
RND X,Y
MOV Y,PI%{INTEGER}
MUL X,Y
MOV IT%{INTEGER},X
NOP
MOV X,IT%{INTEGER}
MOV G,CP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV I4%{INTEGER},X
NOP
MOV Y,IT%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,CB%{INTEGER}
MOV G,CP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,PI%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,I4%{INTEGER}
MOV G,CP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV X,PI%{INTEGER}
JSR FINX
MOV PI%{INTEGER},X
49865:
NOP
JSR GOSUB
JSR 50900
NOP
JMP RETURN
49900:
NOP
49905:
NOP
MOV Y,#-1.0{REAL}
MOV X,CB%{INTEGER}
EQ X,Y
PUSH X
MOV Y,#12{INTEGER}
MOV X,SG%{INTEGER}
NEQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP152
JMP SKIP152
NSKIP152:
JMP RETURN
NOP
SKIP152:
49910:
NOP
MOV Y,#-1.0{REAL}
MOV X,DR%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP153
JMP SKIP153
NSKIP153:
NOP
NOP
MOV Y,IB%{INTEGER}
MOV IT%{INTEGER},Y
NOP
NOP
MOV Y,I2%{INTEGER}
MOV IB%{INTEGER},Y
NOP
NOP
MOV Y,#1{INTEGER}
MOV DR%{INTEGER},Y
JSR GOSUB
NOP
JSR 48300
NOP
NOP
MOV Y,#-1.0{REAL}
MOV DR%{INTEGER},Y
NOP
NOP
MOV Y,IT%{INTEGER}
MOV IB%{INTEGER},Y
SKIP153:
49915:
NOP
MOV X,I2%{INTEGER}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV PO%{INTEGER},X
NOP
MOV Y,I2%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
JSR GOSUB
JSR 49350
NOP
JSR GOSUB
JSR 50600
NOP
MOV Y,#-1.0{REAL}
MOV X,PO%{INTEGER}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP154
JMP SKIP154
NSKIP154:
JSR GOSUB
NOP
JSR 47300
SKIP154:
49920:
NOP
JMP RETURN
50000:
NOP
50010:
NOP
MOV Y,#4{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#4{INTEGER}
MOV DD%{INTEGER},Y
NOP
MOV Y,#12{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#3{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#12{INTEGER}
MOV HQ%{INTEGER},Y
50020:
NOP
MOV Y,#16{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#8{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
NOP
JMP RETURN
50200:
NOP
50210:
NOP
JSR GOSUB
JSR 49350
NOP
MOV Y,DR%{INTEGER}
NEG X,Y
MOV A,#2{INTEGER}
SHL X,A
MOV Y,#8{INTEGER}
ADD X,Y
MOV CY%{INTEGER},X
50220:
NOP
MOV Y,#3{INTEGER}
MOV X,CX%{INTEGER}
ADD X,Y
MOV A,#3{INTEGER}
SHL X,A
MOV Y,#20{INTEGER}
ADD X,Y
MOV XC%{INTEGER},X
NOP
MOV Y,#4{INTEGER}
MOV X,CY%{INTEGER}
ADD X,Y
MOV A,#3{INTEGER}
SHL X,A
MOV Y,#30{INTEGER}
ADD X,Y
MOV YC%{INTEGER},X
50230:
NOP
MOV X,XC%{INTEGER}
MOVB 53250,X
NOP
MOV X,YC%{INTEGER}
MOVB 53251,X
50240:
NOP
MOVB 53286,#7{INTEGER}
NOP
MOVB 53269,#2{INTEGER}
50250:
NOP
JSR GOSUB
JSR 49300
NOP
MOV Y,#3{INTEGER}
MOV X,CX%{INTEGER}
ADD X,Y
MOV A,#3{INTEGER}
SHL X,A
MOV Y,#20{INTEGER}
ADD X,Y
MOV XT%{INTEGER},X
NOP
MOV Y,#4{INTEGER}
MOV X,CY%{INTEGER}
ADD X,Y
MOV A,#3{INTEGER}
SHL X,A
MOV Y,#30{INTEGER}
ADD X,Y
MOV YT%{INTEGER},X
50260:
NOP
MOV Y,YC%{INTEGER}
MOV X,YT%{INTEGER}
SUB X,Y
MOV Y,X
ABS X,Y
PUSH X
MOV Y,XC%{INTEGER}
MOV X,XT%{INTEGER}
SUB X,Y
POP Y
DIV X,Y
MOV DX{REAL},X
NOP
MOV Y,XC%{INTEGER}
MOV XC{REAL},Y
50270:
NOP
JSR GOSUB
JSR 50850
NOP
MOV Y,YC%{INTEGER}
MOV Y{REAL},Y
NOP
MOV Y,YT%{INTEGER}
PUSH Y
NOP
MOV Y,DR%{INTEGER}
PUSH Y
MOV A,(Y{REAL})
JSR INITFOR
50280:
NOP
MOV X,XC{REAL}
MOVB 53250,X
NOP
MOV X,Y{REAL}
MOVB 53251,X
50285:
NOP
JSR GOSUB
JSR 51000
NOP
JSR GOSUB
JSR 22000
50290:
NOP
MOV Y,DX{REAL}
MOV X,XC{REAL}
ADD X,Y
MOV XC{REAL},X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
50300:
NOP
MOVB 53269,#0{INTEGER}
NOP
MOVB 53286,#1{INTEGER}
NOP
JMP RETURN
50400:
NOP
50410:
NOP
MOV Y,#1{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV DD%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#100{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#8{INTEGER}
MOV HQ%{INTEGER},Y
50420:
NOP
MOV Y,#16{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#5{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
NOP
MOV Y,#3{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#9{INTEGER}
MOV HQ%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
50430:
NOP
JMP RETURN
50500:
NOP
50510:
NOP
MOV Y,#10{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV DD%{INTEGER},Y
NOP
MOV Y,#10{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#10{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#100{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#8{INTEGER}
MOV HQ%{INTEGER},Y
50520:
NOP
MOV Y,#128{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
NOP
JMP RETURN
50550:
NOP
50560:
NOP
MOV Y,#12{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#15{INTEGER}
MOV DD%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#100{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV HQ%{INTEGER},Y
50570:
NOP
MOV Y,#128{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
NOP
JMP RETURN
50600:
NOP
50610:
NOP
MOV Y,#2{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#5{INTEGER}
MOV DD%{INTEGER},Y
NOP
MOV Y,#15{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#8{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#100{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#5{INTEGER}
MOV HQ%{INTEGER},Y
50620:
NOP
MOV Y,#32{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
NOP
JMP RETURN
50700:
NOP
50710:
NOP
MOV Y,#2{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV DD%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#100{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#12{INTEGER}
MOV HQ%{INTEGER},Y
50720:
NOP
MOV Y,#16{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
NOP
JMP RETURN
50800:
NOP
50810:
NOP
MOV Y,#2{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#15{INTEGER}
MOV DD%{INTEGER},Y
NOP
MOV Y,#3{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#6{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#100{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#6{INTEGER}
MOV HQ%{INTEGER},Y
50820:
NOP
MOV Y,#128{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#5{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
NOP
JMP RETURN
50850:
NOP
50860:
NOP
MOV Y,#9{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#6{INTEGER}
MOV DD%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#100{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#13{INTEGER}
MOV HQ%{INTEGER},Y
50870:
NOP
MOV Y,#128{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#4{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
NOP
JMP RETURN
50900:
NOP
50910:
NOP
MOV Y,#12{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#5{INTEGER}
MOV DD%{INTEGER},Y
NOP
MOV Y,#2{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#3{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#100{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#7{INTEGER}
MOV HQ%{INTEGER},Y
50920:
NOP
MOV Y,#128{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#3{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
NOP
JMP RETURN
50950:
NOP
50952:
NOP
MOV Y,7%{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#7{INTEGER}
MOV DC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#6{INTEGER}
MOV HQ%{INTEGER},Y
50954:
NOP
MOV Y,#16{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#20{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
50956:
NOP
MOV Y,#8{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#3{INTEGER}
MOV DC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#8{INTEGER}
MOV HQ%{INTEGER},Y
50958:
NOP
MOV Y,#16{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#25{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
50960:
NOP
MOV Y,#9{INTEGER}
MOV AT%{INTEGER},Y
NOP
MOV Y,#3{INTEGER}
MOV DC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV EL%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV RL%{INTEGER},Y
NOP
MOV Y,#180{INTEGER}
MOV LQ%{INTEGER},Y
NOP
MOV Y,#7{INTEGER}
MOV HQ%{INTEGER},Y
50962:
NOP
MOV Y,#16{INTEGER}
MOV WF%{INTEGER},Y
NOP
MOV Y,#34{INTEGER}
MOV PT%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV IM%{INTEGER},Y
NOP
JSR GOSUB
JSR 20000
NOP
JMP RETURN
51000:
NOP
51010:
NOP
MOVB X,53266
MOV Y,#100{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP155
JMP SKIP155
NSKIP155:
JMP 51010
NOP
SKIP155:
51020:
NOP
JMP RETURN
51500:
NOP
51510:
NOP
MOV Y,#1{INTEGER}
MOV DR%{INTEGER},Y
NOP
JSR GOSUB
JSR 51700
NOP
JMP RETURN
51600:
NOP
51610:
NOP
MOV Y,#-1.0{REAL}
MOV DR%{INTEGER},Y
NOP
JSR GOSUB
JSR 51700
NOP
JMP RETURN
51700:
NOP
51710:
NOP
MOV Y,#1{INTEGER}
MOV X,DR%{INTEGER}
EQ X,Y
MOV A,#1{INTEGER}
MOV Y,X
SHL Y,A
ADD X,Y
PUSH X
MOV A,#2{INTEGER}
MOV X,IC{REAL}
SHR X,A
MOV Y,X
INT X,Y
MOV A,#2{INTEGER}
SHL X,A
POP Y
SUB X,Y
MOV I4{REAL},X
51720:
NOP
MOV Y,I4{REAL}
MOV X,IC{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP156
JMP SKIP156
NSKIP156:
JMP RETURN
NOP
SKIP156:
51730:
NOP
MOV Y,#-1.0{REAL}
MOV I2{REAL},Y
NOP
MOV Y,IC{REAL}
MOV I3{REAL},Y
NOP
MOV Y,I4{REAL}
PUSH Y
NOP
MOV Y,DR%{INTEGER}
PUSH Y
MOV A,(I3{REAL})
JSR INITFOR
51740:
NOP
MOV X,I3{REAL}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP157
JMP SKIP157
NSKIP157:
NOP
NOP
MOV Y,I3{REAL}
MOV I2{REAL},Y
NOP
NOP
MOV Y,DR%{INTEGER}
MOV X,I4{REAL}
ADD X,Y
MOV I3{REAL},X
SKIP157:
51750:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
51760:
NOP
MOV Y,#-1.0{REAL}
MOV X,I2{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP158
JMP SKIP158
NSKIP158:
JMP RETURN
NOP
SKIP158:
51770:
NOP
MOV Y,I2{REAL}
MOV I3{REAL},Y
NOP
MOV Y,DR%{INTEGER}
MOV X,IC{REAL}
ADD X,Y
PUSH X
NOP
MOV Y,DR%{INTEGER}
NEG X,Y
PUSH X
MOV A,(I3{REAL})
JSR INITFOR
NOP
MOV Y,I3{REAL}
MOV IB%{INTEGER},Y
51780:
NOP
MOV Y,IB%{INTEGER}
PUSH Y
NOP
MOV Y,DR%{INTEGER}
MOV X,IB%{INTEGER}
SUB X,Y
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,IB%{INTEGER}
PUSH Y
NOP
MOV Y,DR%{INTEGER}
MOV X,IB%{INTEGER}
SUB X,Y
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
51785:
NOP
MOV X,IB%{INTEGER}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP159
JMP SKIP159
NSKIP159:
JMP 51810
NOP
SKIP159:
51790:
NOP
MOV Y,DR%{INTEGER}
MOV X,IB%{INTEGER}
SUB X,Y
MOV IB%{INTEGER},X
NOP
JSR GOSUB
JSR 49330
NOP
JSR GOSUB
JSR 47200
51800:
NOP
MOV Y,I3{REAL}
MOV IB%{INTEGER},Y
NOP
JSR GOSUB
JSR 49330
NOP
MOV Y,CX%{INTEGER}
MOV XC%{INTEGER},Y
NOP
MOV Y,CY%{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV X,IB%{INTEGER}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV HP%{INTEGER},X
NOP
MOV X,IB%{INTEGER}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
JSR GOSUB
JSR 30000
51810:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,IC{REAL}
MOV IB%{INTEGER},Y
NOP
JSR GOSUB
JSR 49330
NOP
JSR GOSUB
JSR 47200
NOP
MOV Y,IB%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
51820:
NOP
MOV Y,#1{INTEGER}
MOV X,DR%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP160
JMP SKIP160
NSKIP160:
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,I2{REAL}
ADD X,Y
MOV IC{REAL},X
SKIP160:
51830:
NOP
JMP RETURN
51900:
NOP
51910:
NOP
JSR GOSUB
JSR 57200
NOP
MOV Y,RS%{INTEGER}
MOV SC%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV X,AF%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP161
JMP SKIP161
NSKIP161:
JSR GOSUB
NOP
JSR 57200
NOP
NOP
MOV Y,SC%{INTEGER}
MOV X,RS%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP162
JMP SKIP162
NSKIP162:
NOP
MOV Y,SC%{INTEGER}
NOP
MOV RS%{INTEGER},Y
SKIP162:
SKIP161:
51920:
NOP
JMP RETURN
52000:
NOP
52001:
NOP
MOV Y,#0{INTEGER}
MOV II{REAL},Y
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#7{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV X,I{REAL}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV PF%{INTEGER},X
NOP
MOV Y,#-1.0{REAL}
MOV X,PF%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP163
JMP SKIP163
NSKIP163:
NOP
NOP
MOV Y,PF%{INTEGER}
INT X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,II{REAL}
ADD X,Y
MOV II{REAL},X
SKIP163:
52002:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV Y,#0{INTEGER}
MOV X,II{REAL}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP164
JMP SKIP164
NSKIP164:
NOP
NOP
MOV Y,FQ{REAL}
PUSH Y
MOV Y,#1{INTEGER}
RND X,Y
POP Y
GT X,Y
PUSH X
MOV Y,#0{INTEGER}
MOV X,TP%{INTEGER}
LTEQ X,Y
POP Y
OR X,Y
CMP X,#0{REAL}
JNE NSKIP165
JMP SKIP165
NSKIP165:
JMP RETURN
SKIP165:
NOP
SKIP164:
52005:
NOP
MOV Y,HF%{INTEGER}
MOV AF%{INTEGER},Y
NOP
JSR GOSUB
JSR 51900
NOP
MOV Y,RS%{INTEGER}
MOV CN%{INTEGER},Y
52010:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,AI%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
52020:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,#-1.0{REAL}
MOV EV%{INTEGER},Y
NOP
MOV X,I{REAL}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP166
JMP SKIP166
NSKIP166:
JMP 52100
NOP
SKIP166:
52030:
NOP
MOV Y,#0{INTEGER}
MOV EV%{INTEGER},Y
NOP
MOV Y,I{REAL}
MOV II%{INTEGER},Y
NOP
MOV Y,#4{INTEGER}
MOV X,II%{INTEGER}
ADD X,Y
MOV II%{INTEGER},X
NOP
MOV X,II%{INTEGER}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP167
JMP SKIP167
NSKIP167:
NOP
NOP
MOV Y,#5{INTEGER}
MOV X,EV%{INTEGER}
ADD X,Y
MOV EV%{INTEGER},X
NOP
NOP
SKIP167:
52040:
NOP
MOV Y,#4{INTEGER}
MOV X,II%{INTEGER}
ADD X,Y
MOV II%{INTEGER},X
NOP
MOV X,II%{INTEGER}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP168
JMP SKIP168
NSKIP168:
NOP
NOP
MOV Y,#5{INTEGER}
MOV X,EV%{INTEGER}
ADD X,Y
MOV EV%{INTEGER},X
JMP 52100
NOP
NOP
NOP
SKIP168:
52050:
NOP
MOV Y,#44{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
PUSH X
MOV Y,#2{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MUL X,Y
POP Y
ADD X,Y
MOV I2%{INTEGER},X
NOP
MOV Y,#44{INTEGER}
MOV X,II%{INTEGER}
PUSH Y
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
PUSH X
MOV Y,#2{INTEGER}
MOV X,II%{INTEGER}
PUSH Y
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
INT X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MUL X,Y
POP Y
ADD X,Y
MOV I3%{INTEGER},X
52060:
NOP
MOV Y,I2%{INTEGER}
MOV X,I3%{INTEGER}
SUB X,Y
MOV I3%{INTEGER},X
NOP
MOV Y,I3%{INTEGER}
MOV X,EV%{INTEGER}
ADD X,Y
MOV EV%{INTEGER},X
52100:
NOP
MOV Y,I{REAL}
PUSH Y
NOP
POP X
MOV Y,EV%{INTEGER}
MOV G,AI%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
52110:
NOP
MOV Y,#-32000.0{REAL}
MOV MX%{INTEGER},Y
NOP
MOV Y,#-1.0{REAL}
MOV I2%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV X,I{REAL}
MOV G,AI%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#-1.0{REAL}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP169
JMP SKIP169
NSKIP169:
JMP 52150
NOP
SKIP169:
52120:
NOP
MOV X,I{REAL}
MOV G,AI%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,MX%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP170
JMP SKIP170
NSKIP170:
NOP
NOP
MOV X,I{REAL}
MOV G,AI%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV MX%{INTEGER},X
NOP
NOP
MOV Y,I{REAL}
MOV I2%{INTEGER},Y
SKIP170:
52150:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
52160:
NOP
MOV Y,#-1.0{REAL}
MOV X,I2%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP171
JMP SKIP171
NSKIP171:
JMP RETURN
NOP
SKIP171:
52170:
NOP
MOV Y,I2%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,CN%{INTEGER}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,I2%{INTEGER}
PUSH Y
NOP
MOV Y,#44{INTEGER}
PUSH Y
MOV Y,CN%{INTEGER}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#0{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV Y,#7{INTEGER}
MOV X,I2%{INTEGER}
MUL X,Y
MOV XC%{INTEGER},X
NOP
JSR GOSUB
JSR 30800
52180:
NOP
MOV X,TP%{INTEGER}
JSR FDEX
MOV TP%{INTEGER},X
NOP
JMP RETURN
53000:
NOP
53010:
NOP
MOVB 53269,#0{INTEGER}
53015:
NOP
MOV Y,#3{INTEGER}
MOV X,WN%{INTEGER}
ADD X,Y
MOV MG%{INTEGER},X
NOP
MOV Y,#3{INTEGER}
MOV WT%{INTEGER},Y
NOP
JSR GOSUB
JSR 50950
NOP
JSR GOSUB
JSR 40100
NOP
JSR GOSUB
JSR 48400
53020:
NOP
MOV Y,#0{INTEGER}
MOV S1%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV S2%{INTEGER},Y
53025:
NOP
MOV Y,#0{INTEGER}
MOV OV%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV HC%{INTEGER},Y
53030:
NOP
MOV Y,#0{INTEGER}
MOV BC%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV DS%{INTEGER},Y
53040:
NOP
MOV Y,#0{INTEGER}
MOV CS%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV SO%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV WN%{INTEGER},Y
53050:
NOP
MOV Y,#5{INTEGER}
MOV MD%{INTEGER},Y
NOP
JSR GOSUB
JSR 33600
NOP
JSR GOSUB
JSR 33250
53060:
NOP
JSR GOSUB
JSR 34700
NOP
JSR GOSUB
JSR 34750
NOP
JSR GOSUB
JSR 47600
NOP
JMP RETURN
54000:
NOP
54010:
NOP
JSR $400
NOP
MOVB 646,#7{INTEGER}
NOP
MOVB X,53269
MOV GZ%{INTEGER},X
NOP
MOVB 53269,#0{INTEGER}
54020:
NOP
MOV Y,CX%{INTEGER}
MOV OX%{INTEGER},Y
NOP
MOV Y,CY%{INTEGER}
MOV OY%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV F{REAL},Y
NOP
MOV Y,#7{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(F{REAL})
JSR INITFOR
54030:
NOP
JSR COMPACTMAX
MOV Y,#147{INTEGER}
CHGCTX #1
JSR CHR
JSR STROUT
NOP
MOV Y,#0{INTEGER}
MOV CY%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
MOV CX%{INTEGER},Y
54040:
NOP
MOV Y,#2{INTEGER}
PUSH Y
MOV Y,#8{INTEGER}
PUSH Y
MOV Y,#2{INTEGER}
PUSH Y
JSR COMPACTMAX
MOV C,#2{INTEGER}
PUSH C
MOV C,#-1{INTEGER}
PUSH C
MOV Y,F{REAL}
CHGCTX #1
JSR STR
MOV B,A
POP D
POP C
JSR MID
MOV B,A
MOV A,#help{STRING}
JSR CONCAT
MOV B,#.hlp,s,r{STRING}
JSR CONCAT
MOV G,A
POP D
POP C
POP X
MOV Y,#4{INTEGER}
JSR OPEN
54050:
NOP
MOV Y,#2{INTEGER}
PUSH Y
JSR CLEARQUEUE
JSR COMPACTMAX
POP C
JSR INPUTSTRCHANNEL
MOV LI${STRING},A
NOP
MOV B,#***{STRING}
MOV A,LI${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP172
JMP SKIP172
NSKIP172:
MOV Y,#2{INTEGER}
NOP
MOV X,Y
JSR CLOSE
JMP 54100
NOP
SKIP172:
54060:
NOP
JSR COMPACTMAX
MOV B,#%{STRING}
CHGCTX #0
PUSH B
MOV C,#1{INTEGER}
CHGCTX #1
MOV B,LI${STRING}
JSR LEFT
POP B
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP173
JMP SKIP173
NSKIP173:
NOP
NOP
JSR COMPACTMAX
MOV C,#5{INTEGER}
MOV D,#-1{INTEGER}
CHGCTX #1
MOV B,LI${STRING}
JSR MID
PUSH A
CHGCTX #0
MOV C,#2{INTEGER}
MOV D,#3{INTEGER}
CHGCTX #1
MOV B,LI${STRING}
JSR MID
MOV B,A
CHGCTX #0
JSR VAL
MOV Y,X
CHGCTX #1
JSR CHR
POP B
JSR CONCAT
JSR COPYSTR
MOV LI${STRING},A
SKIP173:
54070:
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,LI${STRING}
JSR STROUT
NOP
MOV X,CY%{INTEGER}
JSR FINX
MOV CY%{INTEGER},X
54080:
NOP
JMP 54050
54100:
NOP
MOV Y,#7{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#24{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
54110:
NOP
MOV A,#c to continue, x to exit{STRING}
JSR STROUT
54120:
NOP
JSR GETSTR
MOV A${STRING},A
NOP
MOV B,#x{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP174
JMP SKIP174
NSKIP174:
JMP 54300
NOP
SKIP174:
54130:
NOP
MOV B,#c{STRING}
MOV A,A${STRING}
CHGCTX #0
JSR SEQ
CMP X,#0{REAL}
JNE NSKIP175
JMP SKIP175
NSKIP175:
MOV A,#0{INTEGER}
NOP
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
JMP 54300
NOP
SKIP175:
54140:
NOP
JMP 54120
54300:
NOP
JSR $403
NOP
MOV X,GZ%{INTEGER}
MOVB 53269,X
NOP
MOV B,#{STRING}
MOV A${STRING},B
NOP
MOV Y,OX%{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,OY%{INTEGER}
MOV CY%{INTEGER},Y
NOP
JMP RETURN
57000:
NOP
57010:
NOP
MOV Y,#1{INTEGER}
MOV RR%{INTEGER},Y
NOP
MOV Y,#0{INTEGER}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,RP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#32000{INTEGER}
MOV MI%{INTEGER},Y
NOP
MOV Y,#-32000.0{REAL}
MOV MX%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV I{REAL},Y
NOP
MOV X,CM%{INTEGER}
JSR FDEX
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
57020:
NOP
MOV Y,#22{INTEGER}
PUSH Y
MOV Y,I{REAL}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,#3{INTEGER}
EQ X,Y
MOV A,#2{INTEGER}
SHL X,A
PUSH X
MOV Y,#44{INTEGER}
PUSH Y
MOV Y,I{REAL}
INT X,Y
POP Y
ADD X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
PUSH X
MOV Y,#2{INTEGER}
PUSH Y
MOV Y,I{REAL}
INT X,Y
MOV G,CV%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MUL X,Y
POP Y
ADD X,Y
POP Y
SUB X,Y
MOV II%{INTEGER},X
NOP
MOV Y,MI%{INTEGER}
MOV X,II%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP176
JMP SKIP176
NSKIP176:
NOP
NOP
MOV Y,II%{INTEGER}
MOV MI%{INTEGER},Y
SKIP176:
57025:
NOP
MOV Y,MX%{INTEGER}
MOV X,II%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP177
JMP SKIP177
NSKIP177:
NOP
NOP
MOV Y,II%{INTEGER}
MOV MX%{INTEGER},Y
SKIP177:
57030:
NOP
MOV Y,RR%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,II%{INTEGER}
MOV G,RP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV X,RR%{INTEGER}
JSR FINX
MOV RR%{INTEGER},X
57040:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
MOV X,MX%{INTEGER}
JSR FINX
MOV Y,MI%{INTEGER}
SUB X,Y
MOV MX%{INTEGER},X
NOP
MOV Y,#0{INTEGER}
MOV I2%{INTEGER},Y
57050:
NOP
MOV Y,#1{INTEGER}
MOV I{REAL},Y
NOP
MOV X,RR%{INTEGER}
JSR FDEX
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,I{REAL}
PUSH Y
NOP
MOV X,I{REAL}
MOV G,RP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,MI%{INTEGER}
SUB X,Y
MOV Y,X
POP X
MOV G,RP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,I{REAL}
PUSH Y
NOP
MOV X,I{REAL}
MOV G,RP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
MOV X,MX%{INTEGER}
SUB X,Y
MOV Y,X
POP X
MOV G,RO%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV X,I{REAL}
MOV G,RO%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,I2%{INTEGER}
ADD X,Y
MOV I2%{INTEGER},X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
57060:
NOP
MOV Y,RR%{INTEGER}
MOV I4%{INTEGER},Y
NOP
MOV Y,I2%{INTEGER}
MOV RR%{INTEGER},Y
NOP
MOV Y,#200{INTEGER}
MOV X,RR%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP178
JMP SKIP178
NSKIP178:
JMP 57300
NOP
SKIP178:
57070:
NOP
MOV Y,#0{INTEGER}
MOV I3%{INTEGER},Y
NOP
MOV Y,#1{INTEGER}
MOV I{REAL},Y
NOP
MOV X,I4%{INTEGER}
JSR FDEX
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV X,I{REAL}
MOV G,RO%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV II%{INTEGER},X
NOP
MOV Y,I3%{INTEGER}
MOV P{REAL},Y
NOP
MOV Y,II%{INTEGER}
MOV X,I3%{INTEGER}
ADD X,Y
MOV Y,#1{INTEGER}
SUB X,Y
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(P{REAL})
JSR INITFOR
NOP
MOV Y,P{REAL}
PUSH Y
NOP
POP X
MOV Y,I{REAL}
MOV G,RC%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
57080:
NOP
MOV Y,P{REAL}
MOV I3%{INTEGER},Y
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
57090:
NOP
MOV Y,RR%{INTEGER}
MOV X,I3%{INTEGER}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP179
JMP SKIP179
NSKIP179:
JMP 57300
NOP
SKIP179:
57100:
NOP
JMP RETURN
57200:
NOP
57210:
NOP
MOV Y,RR%{INTEGER}
PUSH Y
MOV Y,#0{INTEGER}
RND X,Y
POP Y
MUL X,Y
MOV G,RC%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV RS%{INTEGER},X
NOP
JMP RETURN
57250:
NOP
57255:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#5{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
NOP
MOV Y,#29{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#18{INTEGER}
MOV X,I{REAL}
ADD X,Y
MOV CY%{INTEGER},X
NOP
JSR GOSUB
JSR 34500
57260:
NOP
MOV A,#{11*space}{STRING}
JSR STROUT
57270:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
57280:
NOP
57285:
NOP
JSR GOSUB
JSR 57250
NOP
MOV Y,#29{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#19{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
57290:
NOP
MOV A,#{white}x:{light gray}end turn{STRING}
JSR STROUT
57292:
NOP
MOV Y,#20{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{white}s/w:{light gray}select{STRING}
JSR STROUT
57294:
NOP
MOV Y,#21{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{white}a/spc:{light gray}place{STRING}
JSR STROUT
57295:
NOP
MOV Y,#22{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{white}h:{light gray}help{STRING}
JSR STROUT
57296:
NOP
JMP RETURN
57300:
NOP
57310:
NOP
MOV A,#!!!{STRING}
JSR STROUT
JSR LINEBREAK
NOP
JSR END
RTS
57350:
NOP
57355:
NOP
JSR GOSUB
JSR 57250
NOP
MOV Y,#29{INTEGER}
MOV CX%{INTEGER},Y
NOP
MOV Y,#19{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
57360:
NOP
MOV A,#{white}a/d:{light gray}select{STRING}
JSR STROUT
57362:
NOP
MOV Y,#20{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{white}w/spc:{light gray}place{STRING}
JSR STROUT
57364:
NOP
MOV Y,#21{INTEGER}
MOV CY%{INTEGER},Y
NOP
JSR GOSUB
JSR 34500
NOP
MOV A,#{white}s:{light gray}cancel{STRING}
JSR STROUT
57366:
NOP
JMP RETURN
57400:
NOP
57410:
NOP
MOV Y,CY%{INTEGER}
MOV A,#5{INTEGER}
MOV X,Y
SHL X,A
MOV A,#3{INTEGER}
SHL Y,A
ADD X,Y
MOV Y,CX%{INTEGER}
ADD X,Y
MOV Y,SA{REAL}
ADD X,Y
MOV P{REAL},X
NOP
MOV Y,P{REAL}
MOV PP{REAL},Y
NOP
MOV Y,P{REAL}
MOVB (Y),#224{INTEGER}
NOP
MOV Y,CA{REAL}
MOV X,P{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#1{INTEGER}
57440:
NOP
MOV A,#2{INTEGER}
MOV X,S1%{INTEGER}
SHR X,A
MOV P1%{INTEGER},X
NOP
MOV A,#2{INTEGER}
MOV X,P1%{INTEGER}
SHL X,A
MOV Y,X
MOV X,S1%{INTEGER}
SUB X,Y
MOV P2%{INTEGER},X
NOP
MOV Y,#1{INTEGER}
MOV X,P{REAL}
ADD X,Y
MOV P{REAL},X
NOP
MOV Y,#0{INTEGER}
MOV P3%{INTEGER},Y
57450:
NOP
MOV Y,#0{INTEGER}
MOV X,P1%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP180
JMP SKIP180
NSKIP180:
NOP
NOP
MOV X,P1%{INTEGER}
JSR FDEX
MOV P1%{INTEGER},X
MOV Y,P{REAL}
NOP
MOVB (Y),#224{INTEGER}
MOV Y,CA{REAL}
NOP
MOV X,P{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#5{INTEGER}
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,P{REAL}
ADD X,Y
MOV P{REAL},X
NOP
NOP
MOV X,P3%{INTEGER}
JSR FINX
MOV P3%{INTEGER},X
JMP 57450
NOP
SKIP180:
57460:
NOP
MOV Y,#0{INTEGER}
MOV X,P2%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP181
JMP SKIP181
NSKIP181:
MOV Y,P{REAL}
NOP
PUSH Y
MOV Y,#2{INTEGER}
MOV X,P2%{INTEGER}
ADD X,Y
MOV G,SB%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
MOV Y,CA{REAL}
NOP
MOV X,P{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#5{INTEGER}
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,P{REAL}
ADD X,Y
MOV P{REAL},X
NOP
NOP
MOV X,P3%{INTEGER}
JSR FINX
MOV P3%{INTEGER},X
SKIP181:
57465:
NOP
MOV Y,#10{INTEGER}
MOV X,P3%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP182
JMP SKIP182
NSKIP182:
NOP
NOP
MOV Y,P{REAL}
MOV P{REAL},Y
NOP
MOV Y,#10{INTEGER}
MOV X,P{REAL}
ADD X,Y
MOV Y,P3%{INTEGER}
SUB X,Y
PUSH X
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(P{REAL})
JSR INITFOR
MOV Y,P{REAL}
NOP
MOVB (Y),#32{INTEGER}
MOV A,#0{INTEGER}
NOP
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
SKIP182:
57470:
NOP
MOV Y,#1{INTEGER}
MOV X,PP{REAL}
SUB X,Y
MOV P{REAL},X
57480:
NOP
MOV A,#2{INTEGER}
MOV X,S2%{INTEGER}
SHR X,A
MOV P1%{INTEGER},X
NOP
MOV A,#2{INTEGER}
MOV X,P1%{INTEGER}
SHL X,A
MOV Y,X
MOV X,S2%{INTEGER}
SUB X,Y
MOV P2%{INTEGER},X
NOP
MOV Y,#0{INTEGER}
MOV P3%{INTEGER},Y
57490:
NOP
MOV Y,#0{INTEGER}
MOV X,P1%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP183
JMP SKIP183
NSKIP183:
NOP
NOP
MOV X,P1%{INTEGER}
JSR FDEX
MOV P1%{INTEGER},X
MOV Y,P{REAL}
NOP
MOVB (Y),#224{INTEGER}
MOV Y,CA{REAL}
NOP
MOV X,P{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#2{INTEGER}
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,P{REAL}
SUB X,Y
MOV P{REAL},X
NOP
NOP
MOV X,P3%{INTEGER}
JSR FINX
MOV P3%{INTEGER},X
JMP 57490
NOP
SKIP183:
57500:
NOP
MOV Y,#0{INTEGER}
MOV X,P2%{INTEGER}
GT X,Y
CMP X,#0{REAL}
JNE NSKIP184
JMP SKIP184
NSKIP184:
MOV Y,P{REAL}
NOP
PUSH Y
MOV X,P2%{INTEGER}
JSR FDEX
MOV G,SB%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
POP Y
MOVB (Y),X
MOV Y,CA{REAL}
NOP
MOV X,P{REAL}
ADD X,Y
MOV Y,X
MOVB (Y),#2{INTEGER}
NOP
NOP
MOV Y,#1{INTEGER}
MOV X,P{REAL}
SUB X,Y
MOV P{REAL},X
NOP
NOP
MOV X,P3%{INTEGER}
JSR FINX
MOV P3%{INTEGER},X
SKIP184:
57510:
NOP
MOV Y,#10{INTEGER}
MOV X,P3%{INTEGER}
LT X,Y
CMP X,#0{REAL}
JNE NSKIP185
JMP SKIP185
NSKIP185:
NOP
NOP
MOV Y,P{REAL}
MOV P{REAL},Y
NOP
MOV Y,P3%{INTEGER}
MOV X,#10{INTEGER}
SUB X,Y
MOV Y,X
MOV X,P{REAL}
SUB X,Y
PUSH X
NOP
MOV Y,#-1.0{REAL}
PUSH Y
MOV A,(P{REAL})
JSR INITFOR
MOV Y,P{REAL}
NOP
MOVB (Y),#32{INTEGER}
MOV A,#0{INTEGER}
NOP
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
SKIP185:
57520:
NOP
JMP RETURN
58000:
NOP
58010:
NOP
MOV Y,#0{INTEGER}
MOV I4{REAL},Y
NOP
MOV Y,#3{INTEGER}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(I4{REAL})
JSR INITFOR
NOP
MOV X,I4{REAL}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CN%{INTEGER},X
NOP
MOV Y,#-1.0{REAL}
MOV X,CN%{INTEGER}
EQ X,Y
CMP X,#0{REAL}
JNE NSKIP186
JMP SKIP186
NSKIP186:
JMP 58100
NOP
SKIP186:
58020:
NOP
MOV Y,#4{INTEGER}
MOV X,I4{REAL}
ADD X,Y
MOV II{REAL},X
NOP
MOV X,II{REAL}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV CB%{INTEGER},X
NOP
MOV Y,#-1.0{REAL}
MOV X,CB%{INTEGER}
NEQ X,Y
CMP X,#0{REAL}
JNE NSKIP187
JMP SKIP187
NSKIP187:
JMP 58100
NOP
SKIP187:
58030:
NOP
MOV Y,II{REAL}
PUSH Y
NOP
MOV X,I4{REAL}
MOV G,PF%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,II{REAL}
PUSH Y
NOP
MOV X,I4{REAL}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV Y,X
POP X
MOV G,HP%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,I4{REAL}
PUSH Y
NOP
POP X
MOV Y,#-1.0{REAL}
MOV G,PF%[]{INTEGER}
JSR ARRAYSTORE
58040:
NOP
MOV Y,#0{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV Y,#7{INTEGER}
MOV X,I4{REAL}
MUL X,Y
MOV XC%{INTEGER},X
NOP
JSR GOSUB
JSR 32100
58050:
NOP
MOV Y,#4{INTEGER}
MOV YC%{INTEGER},Y
NOP
MOV X,II{REAL}
MOV G,HP%[]{INTEGER}
CHGCTX #0
JSR ARRAYACCESS
MOV HP%{INTEGER},X
NOP
JSR GOSUB
JSR 30000
58100:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
58500:
NOP
58510:
NOP
MOV Y,#0{INTEGER}
MOV I{REAL},Y
NOP
MOV Y,#30{INTEGER}
PUSH Y
NOP
MOV Y,#3{INTEGER}
PUSH Y
MOV A,(I{REAL})
JSR INITFOR
58520:
NOP
JSR READNUMBER
MOV A%{INTEGER},Y
JSR READNUMBER
MOV B%{INTEGER},Y
JSR READNUMBER
MOV C%{INTEGER},Y
NOP
MOV Y,I{REAL}
MOV I%{INTEGER},Y
58530:
NOP
MOV Y,I%{INTEGER}
PUSH Y
NOP
POP X
MOV Y,A%{INTEGER}
MOV G,SK%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV X,I%{INTEGER}
JSR FINX
NOP
MOV Y,B%{INTEGER}
MOV G,SK%[]{INTEGER}
JSR ARRAYSTORE
NOP
MOV Y,#2{INTEGER}
MOV X,I%{INTEGER}
ADD X,Y
NOP
MOV Y,C%{INTEGER}
MOV G,SK%[]{INTEGER}
JSR ARRAYSTORE
58540:
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
NOP
JMP RETURN
58999:
NOP
59000:
NOP
MOVB 53285,#11{INTEGER}
NOP
59010:
NOP
MOVB 53286,#1{INTEGER}
NOP
59020:
NOP
MOVB 53269,#0{INTEGER}
NOP
59030:
NOP
MOV Y,#49152{INTEGER}
MOV X{REAL},Y
NOP
MOV Y,#49279.0{REAL}
PUSH Y
NOP
MOV Y,#1{INTEGER}
PUSH Y
MOV A,(X{REAL})
JSR INITFOR
NOP
JSR READNUMBER
MOV Y%{INTEGER},Y
NOP
MOV Y,X{REAL}
PUSH Y
MOV X,Y%{INTEGER}
POP Y
MOVB (Y),X
NOP
MOV A,#0{INTEGER}
JSR NEXT
CMP A,#0{INTEGER}
JE ($JUMP)
59040:
NOP
59050:
NOP
MOVB 53287,#5{INTEGER}
NOP
59060:
NOP
MOVB 53240,#0{INTEGER}
NOP
59070:
NOP
MOVB 53248,#97{INTEGER}
NOP
59080:
NOP
MOVB 53249,#100{INTEGER}
NOP
59090:
NOP
59100:
NOP
MOVB 53288,#15{INTEGER}
NOP
59110:
NOP
MOVB 53241,#1{INTEGER}
NOP
59120:
NOP
MOVB 53250,#124{INTEGER}
NOP
59130:
NOP
MOVB 53251,#100{INTEGER}
NOP
59190:
NOP
MOVB 53276,#7{INTEGER}
NOP
59200:
NOP
MOVB 53277,#0{INTEGER}
NOP
59210:
NOP
MOVB 53271,#0{INTEGER}
NOP
59215:
NOP
JMP RETURN
59220:
NOP
59230:
59240:
59250:
59260:
59270:
NOP
59280:
59290:
59300:
59310:
59999:
NOP
60010:
60020:
60030:
60040:
60050:
60060:
60070:
60080:
60090:
60100:
60110:
60120:
60130:
60140:
60150:
60160:
60170:
60180:
60190:
60200:
60210:
60220:
60230:
61000:
NOP
61010:
NOP
61020:
NOP
61030:
NOP
61040:
NOP
61050:
NOP
62800:
62805:
62810:
62820:
62830:
62840:
62850:
62860:
62870:
62899:
62900:
NOP
62910:
62920:
NOP
62930:
62940:
NOP
62942:
62944:
62946:
62948:
62950:
62952:
62954:
62956:
62958:
62960:
62962:
63000:
NOP
63002:
NOP
63004:
NOP
63006:
NOP
63007:
NOP
63008:
NOP
63010:
NOP
63011:
NOP
63012:
NOP
63014:
NOP
63016:
NOP
63018:
NOP
63020:
NOP
63022:
NOP
63023:
NOP
63024:
NOP
63026:
NOP
63028:
NOP
63030:
NOP
63034:
NOP
63036:
NOP
63038:
NOP
63040:
NOP
63042:
NOP
63044:
NOP
63046:
NOP
63048:
NOP
63050:
NOP
63052:
NOP
63054:
NOP
63056:
NOP
63060:
NOP
63062:
NOP
63064:
NOP
63065:
NOP
63066:
NOP
63068:
NOP
63070:
NOP
63072:
NOP
63074:
NOP
63076:
NOP
63078:
NOP
63080:
NOP
63090:
NOP
63100:
NOP
63110:
NOP
63120:
NOP
63130:
NOP
63140:
NOP
63150:
NOP
63160:
NOP
63170:
NOP
63180:
NOP
63190:
NOP
63200:
NOP
63210:
NOP
63220:
NOP
NOP
JSR END
RTS
